using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSGORCON
{
	enum CommandType : int
	{
		cvar,
		cmd
	}
	class Command
	{
		public string command;
		public CommandType type;
		public string defaultvalue;
		public string description;
		public Command(string command,CommandType type,string defaultvalue,string description)
		{
			this.command = command;
			this.type = type;
			this.defaultvalue = defaultvalue;
			this.description = description;
		}
		
	}
	class CommandList : List<Command>
	{
		private readonly static CommandList _list = new CommandList();

		public static CommandList Commands
		{
			get
			{
				return _list;
			}
		}
		private CommandList() : base()
		{
			this.Add(new Command("BlendBonesMode", CommandType.cvar, "2", ""));
			this.Add(new Command("CS_WarnFriendlyDamageInterval", CommandType.cvar, "3.0", "Defines how frequently the server notifies clients that a player damaged a friend"));
			this.Add(new Command("CreatePredictionError", CommandType.cmd, "", "Create a prediction error"));
			this.Add(new Command("Test_EHandle", CommandType.cmd, "", ""));
			this.Add(new Command("Test_InitRandomEntitySpawner", CommandType.cmd, "", ""));
			this.Add(new Command("Test_ProxyToggle_EnableProxy", CommandType.cmd, "", ""));
			this.Add(new Command("Test_ProxyToggle_SetValue", CommandType.cmd, "", ""));
			this.Add(new Command("Test_RandomizeInPVS", CommandType.cmd, "", ""));
			this.Add(new Command("Test_RemoveAllRandomEntities", CommandType.cmd, "", ""));
			this.Add(new Command("Test_SpawnRandomEntities", CommandType.cmd, "", ""));
			this.Add(new Command("_resetgamestats", CommandType.cmd, "", "Erases current game stats and writes out a blank stats file"));
			this.Add(new Command("achievement_debug", CommandType.cvar, "0", "Turn on achievement debug msgs."));
			this.Add(new Command("achievement_disable", CommandType.cvar, "0", "Turn off achievements."));
			this.Add(new Command("ai_LOS_mode", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_auto_contact_solver", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_block_damage", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_clear_bad_links", CommandType.cmd, "", "Clears bits set on nav links indicating link is unusable "));
			this.Add(new Command("ai_debug_assault", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_avoidancebounds", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_directnavprobe", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_doors", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_dyninteractions", CommandType.cvar, "0", "Debug the NPC dynamic interaction system."));
			this.Add(new Command("ai_debug_efficiency", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_enemies", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_expressions", CommandType.cvar, "0", "Show random expression decisions for NPCs."));
			this.Add(new Command("ai_debug_follow", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_loners", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_looktargets", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_los", CommandType.cvar, "0", "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid."));
			this.Add(new Command("ai_debug_nav", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_node_connect", CommandType.cmd, "", "Debug the attempted connection between two nodes"));
			this.Add(new Command("ai_debug_ragdoll_magnets", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_shoot_positions", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_speech", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_squads", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debug_think_ticks", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_debugscriptconditions", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_default_efficient", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_disable", CommandType.cmd, "", "Bi-passes all AI logic routines and puts all NPCs into their idle animations.  Can be used to get NPCs out of your way and to test effect of AI logic routines on frame rate"));
			this.Add(new Command("ai_drawbattlelines", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_drop_hint", CommandType.cmd, "", "Drop an ai_hint at the player's current eye position."));
			this.Add(new Command("ai_dump_hints", CommandType.cmd, "", ""));
			this.Add(new Command("ai_efficiency_override", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_enable_fear_behavior", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_expression_frametime", CommandType.cvar, "0.05", "Maximum frametime to still play background expressions."));
			this.Add(new Command("ai_expression_optimization", CommandType.cvar, "0", "Disable npc background expressions when you can't see them."));
			this.Add(new Command("ai_fear_player_dist", CommandType.cvar, "720", ""));
			this.Add(new Command("ai_find_lateral_cover", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_find_lateral_los", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_follow_use_points", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_follow_use_points_when_moving", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_force_serverside_ragdoll", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_frametime_limit", CommandType.cvar, "50", "frametime limit for min efficiency AIE_NORMAL (in sec's)."));
			this.Add(new Command("ai_hull", CommandType.cmd, "", "Controls which connections are shown when ai_show_hull or ai_show_connect commands are used<br>	Arguments:	NPC name or classname, <none>=NPC under crosshair"));
			this.Add(new Command("ai_lead_time", CommandType.cvar, "0.0", ""));
			this.Add(new Command("ai_moveprobe_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_moveprobe_jump_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_moveprobe_usetracelist", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_nav_debug_experimental_pathing", CommandType.cvar, "0", "Draw paths tried during search for bodysnatcher pathing"));
			this.Add(new Command("ai_navigator_generate_spikes", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_navigator_generate_spikes_strength", CommandType.cvar, "8", ""));
			this.Add(new Command("ai_next_hull", CommandType.cmd, "", "Cycles through the various hull sizes.  Currently selected hull size is written to the screen.  Controls which connections are shown when ai_show_hull or ai_show_connect commands are used<br>	Arguments:	-none-"));
			this.Add(new Command("ai_no_local_paths", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_no_node_cache", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_no_select_box", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_no_steer", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_no_talk_delay", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_nodes", CommandType.cmd, "", "Toggles node display.  First call displays the nodes for the given network as green objects.  Second call  displays the nodes and their IDs.  Nodes are color coded as follows:<br>	Green		- ground node<br>	Cyan		- air node<br>	Magenta	- climb node<br>	Grey		- node not available for selected hull size<br>	Orange 	- node currently locked"));
			this.Add(new Command("ai_norebuildgraph", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_path_adjust_speed_on_immediate_turns", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_path_insert_pause_at_est_end", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_path_insert_pause_at_obstruction", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_post_frame_navigation", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_radial_max_link_dist", CommandType.cvar, "512", ""));
			this.Add(new Command("ai_reaction_delay_alert", CommandType.cvar, "0.1", ""));
			this.Add(new Command("ai_reaction_delay_idle", CommandType.cvar, "0.3", ""));
			this.Add(new Command("ai_rebalance_thinks", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_report_task_timings_on_limit", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_resume", CommandType.cmd, "", "If NPC is stepping through tasks (see ai_step ) will resume normal processing."));
			this.Add(new Command("ai_sequence_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_set_move_height_epsilon", CommandType.cmd, "", "Set how high AI bumps up ground walkers when checking steps"));
			this.Add(new Command("ai_setenabled", CommandType.cmd, "", "Like ai_disable but you manually specify the state (with a 0 or 1) instead of toggling it."));
			this.Add(new Command("ai_setupbones_debug", CommandType.cvar, "0", "Shows that bones that are setup every think"));
			this.Add(new Command("ai_shot_bias", CommandType.cvar, "1.0", ""));
			this.Add(new Command("ai_shot_bias_max", CommandType.cvar, "1.0", ""));
			this.Add(new Command("ai_shot_bias_min", CommandType.cvar, "-1.0", ""));
			this.Add(new Command("ai_shot_stats", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_shot_stats_term", CommandType.cvar, "1000", ""));
			this.Add(new Command("ai_show_connect", CommandType.cmd, "", "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:<br>	Green		- ground movement <br>	Blue		- jumping movement<br>	Cyan		- flying movement<br>	<br>	Yellow		- crawling movement<br>	Magenta	- climbing movement<br>	Red		- connection disabled"));
			this.Add(new Command("ai_show_connect_crawl", CommandType.cmd, "", "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:<br>	Green		- ground movement <br>	Blue		- jumping movement<br>	Cyan		- flying movement<br>	Yellow		- crawling movement<br>	Magenta	- climbing movement<br>	Red		- connection disabled"));
			this.Add(new Command("ai_show_connect_fly", CommandType.cmd, "", "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:<br>	Green		- ground movement <br>	Blue		- jumping movement<br>	Cyan		- flying movement<br>	<br>	Yellow		- crawling movement<br>	Magenta	- climbing movement<br>	Red		- connection disabled"));
			this.Add(new Command("ai_show_connect_jump", CommandType.cmd, "", "Displays the allowed connections between each node for the currently selected hull type.  Hulls are color code as follows:<br>	Green		- ground movement <br>	Blue		- jumping movement<br>	Cyan		- flying movement<br>	<br>	Yellow		- crawling movement<br>	Magenta	- climbing movement<br>	Red		- connection disabled"));
			this.Add(new Command("ai_show_graph_connect", CommandType.cmd, "", "Toggles graph connection display for the node that the player is looking at.  Nodes that are connected to the selected node by the net graph will be drawn in red with magenta lines connecting to the selected node.  Nodes that are not connected via the net graph from the selected node will be drawn in blue."));
			this.Add(new Command("ai_show_grid", CommandType.cmd, "", "Draw a grid on the floor where looking."));
			this.Add(new Command("ai_show_hints", CommandType.cmd, "", "Displays all hints as small boxes<br>	Blue		- hint is available for use<br>	Red		- hint is currently being used by an NPC<br>	Orange		- hint not being used by timed out<br>	Grey		- hint has been disabled"));
			this.Add(new Command("ai_show_hull", CommandType.cmd, "", "Displays the allowed hulls between each node for the currently selected hull type.  Hulls are color code as follows:<br>	Green		- ground movement <br>	Blue		- jumping movement<br>	Cyan		- flying movement<br>	<br>	Yellow		- crawling movement<br>	Magenta	- climbing movement<br>	Arguments: 	-none-"));
			this.Add(new Command("ai_show_hull_attacks", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_show_node", CommandType.cmd, "", "Highlight the specified node"));
			this.Add(new Command("ai_show_think_tolerance", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_show_visibility", CommandType.cmd, "", "Toggles visibility display for the node that the player is looking at.  Nodes that are visible from the selected node will be drawn in red with yellow lines connecting to the selected node.  Nodes that are not visible from the selected node will be drawn in blue."));
			this.Add(new Command("ai_simulate_task_overtime", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_spread_cone_focus_time", CommandType.cvar, "0.6", ""));
			this.Add(new Command("ai_spread_defocused_cone_multiplier", CommandType.cvar, "3.0", ""));
			this.Add(new Command("ai_spread_pattern_focus_time", CommandType.cvar, "0.8", ""));
			this.Add(new Command("ai_step", CommandType.cmd, "", "NPCs will freeze after completing their current task.  To complete the next task, use 'ai_step' again.  To resume processing normally use 'ai_resume'"));
			this.Add(new Command("ai_strong_optimizations", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_strong_optimizations_no_checkstand", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_task_pre_script", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_test_los", CommandType.cmd, "", "Test AI LOS from the player's POV"));
			this.Add(new Command("ai_test_moveprobe_ignoresmall", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_think_limit_label", CommandType.cvar, "0", ""));
			this.Add(new Command("ai_use_clipped_paths", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_use_efficiency", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_use_frame_think_limits", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_use_think_optimizations", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_use_visibility_cache", CommandType.cvar, "1", ""));
			this.Add(new Command("ai_vehicle_avoidance", CommandType.cvar, "1", ""));
			this.Add(new Command("ainet_generate_report", CommandType.cmd, "", "Generate a report to the console."));
			this.Add(new Command("ainet_generate_report_only", CommandType.cmd, "", "Generate a report to the console."));
			this.Add(new Command("air_density", CommandType.cmd, "", "Changes the density of air for drag computations."));
			this.Add(new Command("ammo_338mag_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_338mag_impulse", CommandType.cvar, "2800", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_338mag_max", CommandType.cvar, "30", ""));
			this.Add(new Command("ammo_357sig_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_357sig_impulse", CommandType.cvar, "2000", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_357sig_max", CommandType.cvar, "52", ""));
			this.Add(new Command("ammo_357sig_min_max", CommandType.cvar, "12", ""));
			this.Add(new Command("ammo_357sig_p250_max", CommandType.cvar, "26", ""));
			this.Add(new Command("ammo_357sig_small_max", CommandType.cvar, "24", ""));
			this.Add(new Command("ammo_45acp_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_45acp_impulse", CommandType.cvar, "2100", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_45acp_max", CommandType.cvar, "100", ""));
			this.Add(new Command("ammo_50AE_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_50AE_impulse", CommandType.cvar, "2400", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_50AE_max", CommandType.cvar, "35", ""));
			this.Add(new Command("ammo_556mm_box_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_556mm_box_impulse", CommandType.cvar, "2400", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_556mm_box_max", CommandType.cvar, "200", ""));
			this.Add(new Command("ammo_556mm_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_556mm_impulse", CommandType.cvar, "2400", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_556mm_max", CommandType.cvar, "90", ""));
			this.Add(new Command("ammo_556mm_small_max", CommandType.cvar, "40", ""));
			this.Add(new Command("ammo_57mm_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_57mm_impulse", CommandType.cvar, "2000", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_57mm_max", CommandType.cvar, "100", ""));
			this.Add(new Command("ammo_762mm_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_762mm_impulse", CommandType.cvar, "2400", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_762mm_max", CommandType.cvar, "90", ""));
			this.Add(new Command("ammo_9mm_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_9mm_impulse", CommandType.cvar, "2000", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_9mm_max", CommandType.cvar, "120", ""));
			this.Add(new Command("ammo_buckshot_headshot_mult", CommandType.cvar, "1.0", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_buckshot_impulse", CommandType.cvar, "600", "You must enable tweaking via tweak_ammo_impulses to use this value."));
			this.Add(new Command("ammo_buckshot_max", CommandType.cvar, "32", ""));
			this.Add(new Command("ammo_grenade_limit_breachcharge", CommandType.cvar, "3", ""));
			this.Add(new Command("ammo_grenade_limit_bumpmine", CommandType.cvar, "3", ""));
			this.Add(new Command("ammo_grenade_limit_default", CommandType.cvar, "1", ""));
			this.Add(new Command("ammo_grenade_limit_flashbang", CommandType.cvar, "1", ""));
			this.Add(new Command("ammo_grenade_limit_snowballs", CommandType.cvar, "3", ""));
			this.Add(new Command("ammo_grenade_limit_total", CommandType.cvar, "3", ""));
			this.Add(new Command("ammo_item_limit_healthshot", CommandType.cvar, "4", ""));
			this.Add(new Command("anim_3wayblend", CommandType.cvar, "1", "Toggle the 3-way animation blending code."));
			this.Add(new Command("anim_twistbones_enabled", CommandType.cvar, "0", "Enable procedural twist bones."));
			this.Add(new Command("autoaim_max_deflect", CommandType.cvar, "0.99", ""));
			this.Add(new Command("autoaim_max_dist", CommandType.cvar, "2160", ""));
			this.Add(new Command("autoaim_viewing_client", CommandType.cvar, "1", ""));
			this.Add(new Command("bot_add", CommandType.cmd, "", "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria."));
			this.Add(new Command("bot_add_ct", CommandType.cmd, "", "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria."));
			this.Add(new Command("bot_add_t", CommandType.cmd, "", "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria."));
			this.Add(new Command("bot_all_weapons", CommandType.cmd, "", "Allows the bots to use all weapons"));
			this.Add(new Command("bot_allow_grenades", CommandType.cvar, "1", "If nonzero, bots may use grenades."));
			this.Add(new Command("bot_allow_machine_guns", CommandType.cvar, "1", "If nonzero, bots may use the machine gun."));
			this.Add(new Command("bot_allow_pistols", CommandType.cvar, "1", "If nonzero, bots may use pistols."));
			this.Add(new Command("bot_allow_rifles", CommandType.cvar, "1", "If nonzero, bots may use rifles."));
			this.Add(new Command("bot_allow_rogues", CommandType.cvar, "1", "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals."));
			this.Add(new Command("bot_allow_shotguns", CommandType.cvar, "1", "If nonzero, bots may use shotguns."));
			this.Add(new Command("bot_allow_snipers", CommandType.cvar, "1", "If nonzero, bots may use sniper rifles."));
			this.Add(new Command("bot_allow_sub_machine_guns", CommandType.cvar, "1", "If nonzero, bots may use sub-machine guns."));
			this.Add(new Command("bot_auto_follow", CommandType.cvar, "0", "If nonzero, bots with high co-op may automatically follow a nearby human player."));
			this.Add(new Command("bot_auto_vacate", CommandType.cvar, "1", "If nonzero, bots will automatically leave to make room for human players."));
			this.Add(new Command("bot_autodifficulty_threshold_high", CommandType.cvar, "5.0", "Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty"));
			this.Add(new Command("bot_autodifficulty_threshold_low", CommandType.cvar, "-2.0", "Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty"));
			this.Add(new Command("bot_chatter", CommandType.cvar, "normal", "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'."));
			this.Add(new Command("bot_chatter_use_rr", CommandType.cvar, "1", "0 = Use old bot chatter system, 1 = Use response rules"));
			this.Add(new Command("bot_control_next_all_teams", CommandType.cmd, "", "Take control of the next bot regardless of team (development only)."));
			this.Add(new Command("bot_controllable", CommandType.cvar, "1", "Determines whether bots can be controlled by players"));
			this.Add(new Command("bot_coop_force_throw_grenade_chance", CommandType.cvar, "0.7", ""));
			this.Add(new Command("bot_coop_idle_max_vision_distance", CommandType.cvar, "1400", "Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep."));
			this.Add(new Command("bot_crouch", CommandType.cvar, "0", ""));
			this.Add(new Command("bot_debug", CommandType.cvar, "0", "For internal testing purposes."));
			this.Add(new Command("bot_debug_target", CommandType.cvar, "0", "For internal testing purposes."));
			this.Add(new Command("bot_defer_to_human_goals", CommandType.cvar, "0", "If nonzero and there is a human on the team, the bots will not do the scenario tasks."));
			this.Add(new Command("bot_defer_to_human_items", CommandType.cvar, "1", "If nonzero and there is a human on the team, the bots will not get scenario items."));
			this.Add(new Command("bot_difficulty", CommandType.cvar, "1", "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert."));
			this.Add(new Command("bot_dont_shoot", CommandType.cvar, "0", "If nonzero, bots will not fire weapons (for debugging)."));
			this.Add(new Command("bot_eco_limit", CommandType.cvar, "2000", "If nonzero, bots will not buy if their money falls below this amount."));
			this.Add(new Command("bot_flipout", CommandType.cvar, "0", "If nonzero, bots use no CPU for AI. Instead, they run around randomly."));
			this.Add(new Command("bot_force_duck", CommandType.cvar, "0", ""));
			this.Add(new Command("bot_freeze", CommandType.cvar, "0", ""));
			this.Add(new Command("bot_goto_mark", CommandType.cmd, "", "Sends a bot to the marked nav area (useful for testing navigation meshes)"));
			this.Add(new Command("bot_goto_selected", CommandType.cmd, "", "Sends a bot to the selected nav area (useful for testing navigation meshes)"));
			this.Add(new Command("bot_ignore_enemies", CommandType.cvar, "0", "If nonzero, bots will ignore enemies (for debugging)."));
			this.Add(new Command("bot_ignore_players", CommandType.cvar, "0", "Bots will not see non-bot players."));
			this.Add(new Command("bot_join_after_player", CommandType.cvar, "1", "If nonzero, bots wait until a player joins before entering the game."));
			this.Add(new Command("bot_join_delay", CommandType.cvar, "0", "Prevents bots from joining the server for this many seconds after a map change."));
			this.Add(new Command("bot_join_in_warmup", CommandType.cvar, "1", "Prevents bots from joining the server while warmup phase is active."));
			this.Add(new Command("bot_join_team", CommandType.cvar, "any", "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'."));
			this.Add(new Command("bot_kick", CommandType.cmd, "", "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria."));
			this.Add(new Command("bot_kill", CommandType.cmd, "", "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria."));
			this.Add(new Command("bot_knives_only", CommandType.cmd, "", "Restricts the bots to only using knives"));
			this.Add(new Command("bot_max_hearing_distance_override", CommandType.cvar, "-1", "Max distance bots can hear targets."));
			this.Add(new Command("bot_max_visible_smoke_length", CommandType.cvar, "200", "Bots will see players through smoke clouds up to this length."));
			this.Add(new Command("bot_max_vision_distance_override", CommandType.cvar, "-1", "Max distance bots can see targets."));
			this.Add(new Command("bot_mimic", CommandType.cvar, "0", ""));
			this.Add(new Command("bot_mimic_yaw_offset", CommandType.cvar, "180", ""));
			this.Add(new Command("bot_pistols_only", CommandType.cmd, "", "Restricts the bots to only using pistols"));
			this.Add(new Command("bot_place", CommandType.cmd, "", "bot_place - Places a bot from the map at where the local player is pointing."));
			this.Add(new Command("bot_profile_db", CommandType.cvar, "BotProfile.db", "The filename from which bot profiles will be read."));
			this.Add(new Command("bot_quota", CommandType.cvar, "10", "Determines the total number of bots in the game."));
			this.Add(new Command("bot_quota_mode", CommandType.cvar, "normal", "Determines the type of quota.<br>Allowed values: 'normal', 'fill', and 'match'.<br>If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota.<br>If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota."));
			this.Add(new Command("bot_randombuy", CommandType.cvar, "0", "should bots ignore their prefered weapons and just buy weapons at random?"));
			this.Add(new Command("bot_show_battlefront", CommandType.cvar, "0", "Show areas where rushing players will initially meet."));
			this.Add(new Command("bot_show_nav", CommandType.cvar, "0", "For internal testing purposes."));
			this.Add(new Command("bot_show_occupy_time", CommandType.cvar, "0", "Show when each nav area can first be reached by each team."));
			this.Add(new Command("bot_show_patrol_areas", CommandType.cvar, "0", "Show bot patrol areas if present."));
			this.Add(new Command("bot_snipers_only", CommandType.cmd, "", "Restricts the bots to only using sniper rifles"));
			this.Add(new Command("bot_stop", CommandType.cvar, "0", "bot_stop <1|all> | <not_bomber> | <t> | <ct>"));
			this.Add(new Command("bot_traceview", CommandType.cvar, "0", "For internal testing purposes."));
			this.Add(new Command("bot_walk", CommandType.cvar, "0", "If nonzero, bots can only walk, not run."));
			this.Add(new Command("bot_zombie", CommandType.cvar, "0", "If nonzero, bots will stay in idle mode and not attack."));
			this.Add(new Command("breakable_disable_gib_limit", CommandType.cvar, "0", ""));
			this.Add(new Command("breakable_multiplayer", CommandType.cvar, "1", ""));
			this.Add(new Command("buddha", CommandType.cmd, "", "Toggle.  Player takes damage but won't die. (Shows red cross when health is zero)"));
			this.Add(new Command("buyrandom", CommandType.cmd, "", "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue."));
			this.Add(new Command("callvote", CommandType.cmd, "", "Start a vote on an issue."));
			this.Add(new Command("cash_player_bomb_defused", CommandType.cvar, "300", ""));
			this.Add(new Command("cash_player_bomb_planted", CommandType.cvar, "300", ""));
			this.Add(new Command("cash_player_damage_hostage", CommandType.cvar, "-30", ""));
			this.Add(new Command("cash_player_get_killed", CommandType.cvar, "0", ""));
			this.Add(new Command("cash_player_interact_with_hostage", CommandType.cvar, "150", ""));
			this.Add(new Command("cash_player_killed_enemy_default", CommandType.cvar, "300", ""));
			this.Add(new Command("cash_player_killed_enemy_factor", CommandType.cvar, "1", ""));
			this.Add(new Command("cash_player_killed_hostage", CommandType.cvar, "-1000", ""));
			this.Add(new Command("cash_player_killed_teammate", CommandType.cvar, "-300", ""));
			this.Add(new Command("cash_player_rescued_hostage", CommandType.cvar, "1000", ""));
			this.Add(new Command("cash_player_respawn_amount", CommandType.cvar, "0", ""));
			this.Add(new Command("cash_team_elimination_bomb_map", CommandType.cvar, "3250", ""));
			this.Add(new Command("cash_team_elimination_hostage_map_ct", CommandType.cvar, "2000", ""));
			this.Add(new Command("cash_team_elimination_hostage_map_t", CommandType.cvar, "1000", ""));
			this.Add(new Command("cash_team_hostage_alive", CommandType.cvar, "0", ""));
			this.Add(new Command("cash_team_hostage_interaction", CommandType.cvar, "500", ""));
			this.Add(new Command("cash_team_loser_bonus", CommandType.cvar, "1400", ""));
			this.Add(new Command("cash_team_loser_bonus_consecutive_rounds", CommandType.cvar, "500", ""));
			this.Add(new Command("cash_team_planted_bomb_but_defused", CommandType.cvar, "800", ""));
			this.Add(new Command("cash_team_rescued_hostage", CommandType.cvar, "0", ""));
			this.Add(new Command("cash_team_survive_guardian_wave", CommandType.cvar, "1000", ""));
			this.Add(new Command("cash_team_terrorist_win_bomb", CommandType.cvar, "3500", ""));
			this.Add(new Command("cash_team_win_by_defusing_bomb", CommandType.cvar, "3250", ""));
			this.Add(new Command("cash_team_win_by_hostage_rescue", CommandType.cvar, "3500", ""));
			this.Add(new Command("cash_team_win_by_time_running_out_bomb", CommandType.cvar, "3250", ""));
			this.Add(new Command("cash_team_win_by_time_running_out_hostage", CommandType.cvar, "3250", ""));
			this.Add(new Command("cash_team_winner_bonus_consecutive_rounds", CommandType.cvar, "0", ""));
			this.Add(new Command("cast_hull", CommandType.cmd, "", "Tests hull collision detection"));
			this.Add(new Command("cast_ray", CommandType.cmd, "", "Tests collision detection"));
			this.Add(new Command("cc_norepeat", CommandType.cvar, "5", "In multiplayer games, don't repeat captions more often than this many seconds."));
			this.Add(new Command("cc_showmissing", CommandType.cvar, "0", "Show missing closecaption entries."));
			this.Add(new Command("ch_createairboat", CommandType.cmd, "", "Spawn airboat in front of the player."));
			this.Add(new Command("ch_createjeep", CommandType.cmd, "", "Spawn jeep in front of the player."));
			this.Add(new Command("chet_debug_idle", CommandType.cvar, "0", "If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info"));
			this.Add(new Command("cl_camera_height_restriction_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("cl_csm_auto_entity", CommandType.cvar, "1", ""));
			this.Add(new Command("cl_csm_server_status", CommandType.cmd, "", "Usage:<br> cl_csm_server_status<br>"));
			this.Add(new Command("cl_player_proximity_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("cl_simdbones", CommandType.cvar, "0", "Use SIMD bone setup."));
			this.Add(new Command("cl_use_simd_bones", CommandType.cvar, "1", "1 use SIMD bones 0 use scalar bones."));
			this.Add(new Command("cl_weapon_clip_thinwalls", CommandType.cvar, "1", ""));
			this.Add(new Command("cl_weapon_clip_thinwalls_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("cl_weapon_clip_thinwalls_lock", CommandType.cvar, "0", ""));
			this.Add(new Command("clear_bombs", CommandType.cmd, "", ""));
			this.Add(new Command("clear_debug_overlays", CommandType.cmd, "", "clears debug overlays"));
			this.Add(new Command("collision_shake_amp", CommandType.cvar, "0.2", ""));
			this.Add(new Command("collision_shake_freq", CommandType.cvar, "0.5", ""));
			this.Add(new Command("collision_shake_time", CommandType.cvar, "0.5", ""));
			this.Add(new Command("collision_test", CommandType.cmd, "", "Tests collision system"));
			this.Add(new Command("commentary", CommandType.cvar, "0", "Desired commentary mode state."));
			this.Add(new Command("commentary_available", CommandType.cvar, "0", "Automatically set by the game when a commentary file is available for the current map."));
			this.Add(new Command("commentary_cvarsnotchanging", CommandType.cmd, "", ""));
			this.Add(new Command("commentary_finishnode", CommandType.cmd, "", ""));
			this.Add(new Command("contributionscore_assist", CommandType.cvar, "1", "amount of contribution score added for an assist"));
			this.Add(new Command("contributionscore_bomb_defuse_major", CommandType.cvar, "3", "amount of contribution score for defusing a bomb while at least one enemy remains alive"));
			this.Add(new Command("contributionscore_bomb_defuse_minor", CommandType.cvar, "1", "amount of contribution score for defusing a bomb after eliminating enemy team"));
			this.Add(new Command("contributionscore_bomb_exploded", CommandType.cvar, "1", "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round"));
			this.Add(new Command("contributionscore_bomb_planted", CommandType.cvar, "2", "amount of contribution score for planting a bomb"));
			this.Add(new Command("contributionscore_cash_bundle", CommandType.cvar, "0", "amount of contribution score for picking up a cash bundle"));
			this.Add(new Command("contributionscore_crate_break", CommandType.cvar, "0", "amount of contribution score for breaking an item crate"));
			this.Add(new Command("contributionscore_hostage_kill", CommandType.cvar, "-2", "amount of contribution score for killing a hostage, normally negative"));
			this.Add(new Command("contributionscore_hostage_rescue_major", CommandType.cvar, "3", "amount of contribution score added to rescuer per hostage rescued"));
			this.Add(new Command("contributionscore_hostage_rescue_minor", CommandType.cvar, "1", "amount of contribution score added to all alive CTs per hostage rescued"));
			this.Add(new Command("contributionscore_kill", CommandType.cvar, "2", "amount of contribution score added for a kill"));
			this.Add(new Command("contributionscore_kill_factor", CommandType.cvar, "0", "percentage of victim's contribution score to award to their killer as a bonus"));
			this.Add(new Command("contributionscore_objective_kill", CommandType.cvar, "3", "amount of contribution score added for an objective related kill"));
			this.Add(new Command("contributionscore_suicide", CommandType.cvar, "-2", "amount of contribution score for a suicide, normally negative"));
			this.Add(new Command("contributionscore_team_kill", CommandType.cvar, "-2", "amount of contribution score for a team kill, normally negative"));
			this.Add(new Command("create_flashlight", CommandType.cmd, "", ""));
			this.Add(new Command("creditsdone", CommandType.cmd, "", ""));
			this.Add(new Command("cs_AssistDamageThreshold", CommandType.cvar, "40.0", "cs_AssistDamageThreshold defines the amount of damage needed to score an assist"));
			this.Add(new Command("cs_ShowStateTransitions", CommandType.cvar, "-2", "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions."));
			this.Add(new Command("cs_enable_player_physics_box", CommandType.cvar, "0", ""));
			this.Add(new Command("cs_hostage_near_rescue_music_distance", CommandType.cvar, "2000", ""));
			this.Add(new Command("cs_make_vip", CommandType.cmd, "", "Marks a player as the VIP"));
			this.Add(new Command("custom_bot_difficulty", CommandType.cvar, "0", "Bot difficulty for offline play."));
			this.Add(new Command("cv_bot_ai_bt_debug_target", CommandType.cvar, "-1", "Draw the behavior tree of the given bot."));
			this.Add(new Command("cv_bot_ai_bt_hiding_spot_show", CommandType.cvar, "0", "Draw hiding spots."));
			this.Add(new Command("cv_bot_ai_bt_moveto_show_next_hiding_spot", CommandType.cvar, "0", "Draw the hiding spot the bot will check next."));
			this.Add(new Command("dbghist_addline", CommandType.cmd, "", "Add a line to the debug history. Format: <category id> <line>"));
			this.Add(new Command("dbghist_dump", CommandType.cmd, "", "Dump the debug history to the console. Format: <category id><br>    Categories:<br>     0: Entity I/O<br>     1: AI Decisions<br>     2: Scene Print<br>     3: Alyx Blind<br>     4: Log of damage done to player"));
			this.Add(new Command("debug_aim_angle", CommandType.cvar, "0", ""));
			this.Add(new Command("debug_dispatch_server_dump", CommandType.cvar, "0", ""));
			this.Add(new Command("debug_materialmodifycontrol", CommandType.cvar, "0", ""));
			this.Add(new Command("debug_overlay_fullposition", CommandType.cvar, "0", ""));
			this.Add(new Command("debug_physimpact", CommandType.cvar, "0", ""));
			this.Add(new Command("debug_touchlinks", CommandType.cvar, "0", "Spew touch link activity"));
			this.Add(new Command("debug_visibility_monitor", CommandType.cvar, "0", ""));
			this.Add(new Command("dev_reportmoneychanges", CommandType.cvar, "0", "Displays money account changes for players in the console"));
			this.Add(new Command("dispcoll_drawplane", CommandType.cvar, "0", ""));
			this.Add(new Command("displaysoundlist", CommandType.cvar, "0", ""));
			this.Add(new Command("dm_reset_spawns", CommandType.cmd, "", ""));
			this.Add(new Command("drawcross", CommandType.cmd, "", "Draws a cross at the given location<br>	Arguments: x y z"));
			this.Add(new Command("drawline", CommandType.cmd, "", "Draws line between two 3D Points.<br>	Green if no collision<br>	Red is collides with something<br>	Arguments: x1 y1 z1 x2 y2 z2"));
			this.Add(new Command("ds_get_newest_subscribed_files", CommandType.cmd, "", "Re-reads web api auth key and subscribed file lists from disk and downloads the latest updates of those files from steam"));
			this.Add(new Command("dump_entity_sizes", CommandType.cmd, "", "Print sizeof(entclass)"));
			this.Add(new Command("dump_globals", CommandType.cmd, "", "Dump all global entities/states"));
			this.Add(new Command("dumpentityfactories", CommandType.cmd, "", "Lists all entity factory names."));
			this.Add(new Command("dumpeventqueue", CommandType.cmd, "", "Dump the contents of the Entity I/O event queue to the console."));
			this.Add(new Command("dumpgamestringtable", CommandType.cmd, "", "Dump the contents of the game string table to the console."));
			this.Add(new Command("dz_clearteams", CommandType.cmd, "", "Clear all DZ teams"));
			this.Add(new Command("dz_jointeam", CommandType.cmd, "", "dz_jointeam team# [userid#|name] - Join DZ team N (0 to leave your team).  Server admins can assign other players to teams."));
			this.Add(new Command("dz_shuffle_teams", CommandType.cmd, "", "Shuffle all teams for Danger Zone"));
			this.Add(new Command("dz_spawnselect_choose_hex", CommandType.cmd, "", ""));
			this.Add(new Command("enable_debug_overlays", CommandType.cvar, "1", "Enable rendering of debug overlays"));
			this.Add(new Command("endround", CommandType.cmd, "", "End the current round."));
			this.Add(new Command("ent_absbox", CommandType.cmd, "", "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_attachments", CommandType.cmd, "", "Displays the attachment points on an entity.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_autoaim", CommandType.cmd, "", "Displays the entity's autoaim radius.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at"));
			this.Add(new Command("ent_bbox", CommandType.cmd, "", "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_cancelpendingentfires", CommandType.cmd, "", "Cancels all ent_fire created outputs that are currently waiting for their delay to expire."));
			this.Add(new Command("ent_create", CommandType.cmd, "", "Creates an entity of the given type where the player is looking."));
			this.Add(new Command("ent_dump", CommandType.cmd, "", "Usage:<br>   ent_dump <entity name><br>"));
			this.Add(new Command("ent_fire", CommandType.cmd, "", "Usage:<br>   ent_fire <target> [action] [value] [delay]<br>"));
			this.Add(new Command("ent_info", CommandType.cmd, "", "Usage:<br>   ent_info <class name><br>"));
			this.Add(new Command("ent_keyvalue", CommandType.cmd, "", "Applies the comma delimited key=value pairs to the entity with the given Hammer ID.<br>	Format: ent_keyvalue <entity id> <key1>=<value1>,<key2>=<value2>,...,<keyN>=<valueN><br>"));
			this.Add(new Command("ent_list_report", CommandType.cmd, "", "Reports all list of all entities in a map, one by one"));
			this.Add(new Command("ent_messages", CommandType.cmd, "", "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at"));
			this.Add(new Command("ent_messages_draw", CommandType.cvar, "0", "Visualizes all entity input/output activity."));
			this.Add(new Command("ent_name", CommandType.cmd, "", ""));
			this.Add(new Command("ent_orient", CommandType.cmd, "", "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.<br>	Format: ent_orient <entity name> <optional: allangles>"));
			this.Add(new Command("ent_pause", CommandType.cmd, "", "Toggles pausing of input/output message processing for entities.  When turned on processing of all message will stop.  Any messages displayed with 'ent_messages' will stop fading and be displayed indefinitely. To step through the messages one by one use 'ent_step'."));
			this.Add(new Command("ent_pivot", CommandType.cmd, "", "Displays the pivot for the given entity(ies).<br>	(y=up=green, z=forward=blue, x=left=red). <br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_rbox", CommandType.cmd, "", "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_remove", CommandType.cmd, "", "Removes the given entity(s)<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_remove_all", CommandType.cmd, "", "Removes all entities of the specified type<br>	Arguments:   	{entity_name} / {class_name} "));
			this.Add(new Command("ent_rotate", CommandType.cmd, "", "Rotates an entity by a specified # of degrees"));
			this.Add(new Command("ent_script_dump", CommandType.cmd, "", "Dumps the names and values of this entity's script scope to the console<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_setang", CommandType.cmd, "", "Set entity angles"));
			this.Add(new Command("ent_setname", CommandType.cmd, "", "Sets the targetname of the given entity(s)<br>	Arguments:   	{new entity name} {entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_setpos", CommandType.cmd, "", "Move entity to position"));
			this.Add(new Command("ent_show_contexts", CommandType.cvar, "0", "Show entity contexts in ent_text display"));
			this.Add(new Command("ent_show_response_criteria", CommandType.cmd, "", "Print, to the console, an entity's current criteria set used to select responses.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_step", CommandType.cmd, "", "When 'ent_pause' is set this will step through one waiting input / output message at a time."));
			this.Add(new Command("ent_teleport", CommandType.cmd, "", "Teleport the specified entity to where the player is looking.<br>	Format: ent_teleport <entity name>"));
			this.Add(new Command("ent_text", CommandType.cmd, "", "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("ent_viewoffset", CommandType.cmd, "", "Displays the eye position for the given entity(ies) in red.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("exojump", CommandType.cmd, "", "equips or removes exojump"));
			this.Add(new Command("explode", CommandType.cmd, "", "Kills the player with explosive damage"));
			this.Add(new Command("explodevector", CommandType.cmd, "", "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>"));
			this.Add(new Command("fadein", CommandType.cmd, "", "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds."));
			this.Add(new Command("fadeout", CommandType.cmd, "", "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds."));
			this.Add(new Command("ff_damage_bullet_penetration", CommandType.cvar, "0", "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player"));
			this.Add(new Command("ff_damage_reduction_bullets", CommandType.cvar, "0.1", "How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"));
			this.Add(new Command("ff_damage_reduction_grenade", CommandType.cvar, "0.25", "How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"));
			this.Add(new Command("ff_damage_reduction_grenade_self", CommandType.cvar, "1", "How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"));
			this.Add(new Command("ff_damage_reduction_other", CommandType.cvar, "0.25", "How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"));
			this.Add(new Command("find_ent", CommandType.cmd, "", "Find and list all entities with classnames or targetnames that contain the specified substring.<br>Format: find_ent <substring><br>"));
			this.Add(new Command("find_ent_index", CommandType.cmd, "", "Display data for entity matching specified index.<br>Format: find_ent_index <index><br>"));
			this.Add(new Command("fire_absorbrate", CommandType.cvar, "3", ""));
			this.Add(new Command("fire_dmgbase", CommandType.cvar, "1", ""));
			this.Add(new Command("fire_dmginterval", CommandType.cvar, "1.0", ""));
			this.Add(new Command("fire_dmgscale", CommandType.cvar, "0.1", ""));
			this.Add(new Command("fire_extabsorb", CommandType.cvar, "5", ""));
			this.Add(new Command("fire_extscale", CommandType.cvar, "12", ""));
			this.Add(new Command("fire_growthrate", CommandType.cvar, "1.0", ""));
			this.Add(new Command("fire_heatscale", CommandType.cvar, "1.0", ""));
			this.Add(new Command("fire_incomingheatscale", CommandType.cvar, "0.1", ""));
			this.Add(new Command("fire_maxabsorb", CommandType.cvar, "50", ""));
			this.Add(new Command("firetarget", CommandType.cmd, "", ""));
			this.Add(new Command("fish_dormant", CommandType.cvar, "0", "Turns off interactive fish behavior. Fish become immobile and unresponsive."));
			this.Add(new Command("flex_expression", CommandType.cvar, "-", ""));
			this.Add(new Command("flex_looktime", CommandType.cvar, "5", ""));
			this.Add(new Command("flex_maxawaytime", CommandType.cvar, "1.0", ""));
			this.Add(new Command("flex_maxplayertime", CommandType.cvar, "7", ""));
			this.Add(new Command("flex_minawaytime", CommandType.cvar, "0.5", ""));
			this.Add(new Command("flex_minplayertime", CommandType.cvar, "5", ""));
			this.Add(new Command("flex_talk", CommandType.cvar, "0", ""));
			this.Add(new Command("fog_volume_debug", CommandType.cvar, "0", "If enabled, prints diagnostic information about the current fog volume"));
			this.Add(new Command("foundry_engine_get_mouse_control", CommandType.cmd, "", "Give the engine control of the mouse."));
			this.Add(new Command("foundry_engine_release_mouse_control", CommandType.cmd, "", "Give the control of the mouse back to Hammer."));
			this.Add(new Command("foundry_select_entity", CommandType.cmd, "", "Select the entity under the crosshair or select entities with the specified name."));
			this.Add(new Command("foundry_sync_hammer_view", CommandType.cmd, "", "Move Hammer's 3D view to the same position as the engine's 3D view."));
			this.Add(new Command("foundry_update_entity", CommandType.cmd, "", "Updates the entity's position/angles when in edit mode"));
			this.Add(new Command("free_pass_peek_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("func_break_max_pieces", CommandType.cvar, "15", ""));
			this.Add(new Command("func_break_reduction_factor", CommandType.cvar, ".5", ""));
			this.Add(new Command("func_breakdmg_bullet", CommandType.cvar, "0.5", ""));
			this.Add(new Command("func_breakdmg_club", CommandType.cvar, "1.5", ""));
			this.Add(new Command("func_breakdmg_explosive", CommandType.cvar, "1.25", ""));
			this.Add(new Command("fx_new_sparks", CommandType.cvar, "1", "Use new style sparks.<br>"));
			this.Add(new Command("g_Language", CommandType.cvar, "0", ""));
			this.Add(new Command("g_ai_threadedgraphbuild", CommandType.cvar, "0", "If true, use experimental threaded node graph building."));
			this.Add(new Command("g_debug_angularsensor", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_constraint_sounds", CommandType.cvar, "0", "Enable debug printing about constraint sounds."));
			this.Add(new Command("g_debug_doors", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_npc_vehicle_roles", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_ragdoll_removal", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_trackpather", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_transitions", CommandType.cvar, "0", "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition."));
			this.Add(new Command("g_debug_vehiclebase", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_vehicledriver", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_vehicleexit", CommandType.cvar, "0", ""));
			this.Add(new Command("g_debug_vehiclesound", CommandType.cvar, "0", ""));
			this.Add(new Command("g_jeepexitspeed", CommandType.cvar, "100", ""));
			this.Add(new Command("g_ragdoll_important_maxcount", CommandType.cvar, "2", ""));
			this.Add(new Command("g_ragdoll_maxcount", CommandType.cvar, "8", ""));
			this.Add(new Command("game_mode", CommandType.cvar, "0", "The current game mode (based on game type). See GameModes.txt."));
			this.Add(new Command("game_online", CommandType.cvar, "1", "The current game is online."));
			this.Add(new Command("game_public", CommandType.cvar, "1", "The current game is public."));
			this.Add(new Command("game_type", CommandType.cvar, "0", "The current game type. See GameModes.txt."));
			this.Add(new Command("gg_knife_kill_demotes", CommandType.cvar, "1", "0 = knife kill in gungame has no effect on player level, 1 = knife kill demotes player by one level"));
			this.Add(new Command("give", CommandType.cmd, "", "Give item to player.<br>	Arguments: <item_name>"));
			this.Add(new Command("givecurrentammo", CommandType.cmd, "", "Give a supply of ammo for current weapon..<br>"));
			this.Add(new Command("global_event_log_enabled", CommandType.cvar, "0", "Enables the global event log system"));
			this.Add(new Command("global_set", CommandType.cmd, "", "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD)."));
			this.Add(new Command("god", CommandType.cmd, "", "Toggle. Player becomes invulnerable."));
			this.Add(new Command("gods", CommandType.cmd, "", "Toggle. All players become invulnerable."));
			this.Add(new Command("groundlist", CommandType.cmd, "", "Display ground entity list <index>"));
			this.Add(new Command("hammer_update_entity", CommandType.cmd, "", "Updates the entity's position/angles when in edit mode"));
			this.Add(new Command("hammer_update_safe_entities", CommandType.cmd, "", "Updates entities in the map that can safely be updated (don't have parents or are affected by constraints). Also excludes entities mentioned in any hammer_updateignorelist objects in this map."));
			this.Add(new Command("healthshot_allow_use_at_full", CommandType.cvar, "1", ""));
			this.Add(new Command("healthshot_health", CommandType.cvar, "50", ""));
			this.Add(new Command("healthshot_healthboost_damage_multiplier", CommandType.cvar, "1", ""));
			this.Add(new Command("healthshot_healthboost_speed_multiplier", CommandType.cvar, "1", ""));
			this.Add(new Command("healthshot_healthboost_time", CommandType.cvar, "0", ""));
			this.Add(new Command("hl2_episodic", CommandType.cvar, "0", ""));
			this.Add(new Command("host_framerate", CommandType.cvar, "0", "Set to lock per-frame time elapse."));
			this.Add(new Command("host_timescale", CommandType.cvar, "1.0", "Prescale the clock by this amount."));
			this.Add(new Command("host_workshop_collection", CommandType.cmd, "", "Get the latest version of maps in a workshop collection and host them as a maplist."));
			this.Add(new Command("host_workshop_map", CommandType.cmd, "", "Get the latest version of the map and host it on this server."));
			this.Add(new Command("hostage_debug", CommandType.cvar, "0", "Show hostage AI debug information"));
			this.Add(new Command("hostage_drop_time", CommandType.cvar, "1", "Time for the hostage before it fully drops to ground"));
			this.Add(new Command("hostage_feetyawrate", CommandType.cvar, "720", "How many degrees per second that hostages can turn their feet or upper body."));
			this.Add(new Command("hostage_is_silent", CommandType.cvar, "0", "When set, the hostage won't play any code driven response rules lines"));
			this.Add(new Command("hostfile", CommandType.cvar, "host.txt", "The HOST file to load."));
			this.Add(new Command("hud_jeephint_numentries", CommandType.cvar, "10", ""));
			this.Add(new Command("hurtme", CommandType.cmd, "", "Hurts the player.<br>	Arguments: <health to lose>"));
			this.Add(new Command("inferno_child_spawn_interval_multiplier", CommandType.cvar, "0.1", "Amount spawn interval increases for each child"));
			this.Add(new Command("inferno_child_spawn_max_depth", CommandType.cvar, "4", ""));
			this.Add(new Command("inferno_damage", CommandType.cvar, "40", "Damage per second"));
			this.Add(new Command("inferno_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("inferno_flame_lifetime", CommandType.cvar, "7", "Average lifetime of each flame in seconds"));
			this.Add(new Command("inferno_flame_spacing", CommandType.cvar, "42", "Minimum distance between separate flame spawns"));
			this.Add(new Command("inferno_forward_reduction_factor", CommandType.cvar, "0.9", ""));
			this.Add(new Command("inferno_friendly_fire_duration", CommandType.cvar, "6", "For this long, FF is credited back to the thrower."));
			this.Add(new Command("inferno_initial_spawn_interval", CommandType.cvar, "0.02", "Time between spawning flames for first fire"));
			this.Add(new Command("inferno_max_child_spawn_interval", CommandType.cvar, "0.5", "Largest time interval for child flame spawning"));
			this.Add(new Command("inferno_max_flames", CommandType.cvar, "16", "Maximum number of flames that can be created"));
			this.Add(new Command("inferno_max_range", CommandType.cvar, "150", "Maximum distance flames can spread from their initial ignition point"));
			this.Add(new Command("inferno_max_trace_per_tick", CommandType.cvar, "16", ""));
			this.Add(new Command("inferno_per_flame_spawn_duration", CommandType.cvar, "3", "Duration each new flame will attempt to spawn new flames"));
			this.Add(new Command("inferno_scorch_decals", CommandType.cvar, "1", ""));
			this.Add(new Command("inferno_spawn_angle", CommandType.cvar, "45", "Angular change from parent"));
			this.Add(new Command("inferno_surface_offset", CommandType.cvar, "20", ""));
			this.Add(new Command("inferno_velocity_decay_factor", CommandType.cvar, "0.2", ""));
			this.Add(new Command("inferno_velocity_factor", CommandType.cvar, "0.003", ""));
			this.Add(new Command("inferno_velocity_normal_factor", CommandType.cvar, "0", ""));
			this.Add(new Command("itemtimedata_dump_active", CommandType.cmd, "", ""));
			this.Add(new Command("itemtimedata_dump_total", CommandType.cmd, "", ""));
			this.Add(new Command("itemtimedata_print_and_reset", CommandType.cmd, "", "Outputs item time data to server log and clears data."));
			this.Add(new Command("kdtree_test", CommandType.cmd, "", "Tests spatial partition for entities queries."));
			this.Add(new Command("kill", CommandType.cmd, "", "Kills the player with generic damage"));
			this.Add(new Command("killvector", CommandType.cmd, "", "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>"));
			this.Add(new Command("knife_damage_scale", CommandType.cvar, "100", ""));
			this.Add(new Command("listRecentNPCSpeech", CommandType.cmd, "", "Displays a list of the last 5 lines of speech from NPCs."));
			this.Add(new Command("listissues", CommandType.cmd, "", "List all the issues that can be voted on."));
			this.Add(new Command("load_master_item_schema", CommandType.cmd, "", "Reloads the item master schema."));
			this.Add(new Command("logaddress_add_http", CommandType.cmd, "", "Set URI of a listener to receive logs via http post. Wrap URI in double quotes."));
			this.Add(new Command("logaddress_add_http_delayed", CommandType.cmd, "", "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes."));
			this.Add(new Command("logaddress_delall_http", CommandType.cmd, "", "Remove all http listeners from the dispatch list."));
			this.Add(new Command("logaddress_list_http", CommandType.cmd, "", "List all URIs currently receiving server logs"));
			this.Add(new Command("loopsingleplayermaps", CommandType.cvar, "0", ""));
			this.Add(new Command("lservercfgfile", CommandType.cvar, "listenserver.cfg", ""));
			this.Add(new Command("map_setbombradius", CommandType.cmd, "", "Sets the bomb radius for the map."));
			this.Add(new Command("map_showbombradius", CommandType.cmd, "", "Shows bomb radius from the center of each bomb site and planted bomb."));
			this.Add(new Command("map_showspawnpoints", CommandType.cmd, "", "Shows player spawn points (red=invalid). Optionally pass in the duration."));
			this.Add(new Command("mapcycledisabled", CommandType.cvar, "0", "repeats the same map after each match instead of using the map cycle"));
			this.Add(new Command("mapcyclefile", CommandType.cvar, "mapcycle.txt", "Name of the .txt file used to cycle the maps on multiplayer servers "));
			this.Add(new Command("mat_vignette_enable", CommandType.cvar, "1", ""));
			this.Add(new Command("molotov_throw_detonate_time", CommandType.cvar, "2.0", ""));
			this.Add(new Command("mortar_visualize", CommandType.cvar, "0", ""));
			this.Add(new Command("motdfile", CommandType.cvar, "motd.txt", "The MOTD file to load."));
			this.Add(new Command("mp_afterroundmoney", CommandType.cvar, "0", "amount of money awared to every player after each round"));
			this.Add(new Command("mp_allowNPCs", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_allowspectators", CommandType.cvar, "1.0", "toggles whether the server allows spectator mode or not"));
			this.Add(new Command("mp_anyone_can_pickup_c4", CommandType.cvar, "0", "If set, everyone can pick up the c4, not just Ts."));
			this.Add(new Command("mp_autocrosshair", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_autokick", CommandType.cvar, "1", "Kick idle/team-killing/team-damaging players"));
			this.Add(new Command("mp_autoteambalance", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_backup_restore_list_files", CommandType.cmd, "", "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed"));
			this.Add(new Command("mp_backup_restore_load_autopause", CommandType.cvar, "1", "Whether to automatically pause the match after restoring round data from backup"));
			this.Add(new Command("mp_backup_restore_load_file", CommandType.cmd, "", "Loads player cash, KDA, scores and team scores; resets to the next round after the backup"));
			this.Add(new Command("mp_backup_round_auto", CommandType.cvar, "1", "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk"));
			this.Add(new Command("mp_backup_round_file", CommandType.cvar, "backup", "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt"));
			this.Add(new Command("mp_backup_round_file_pattern", CommandType.cvar, "%prefix%_round%round%.txt", "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'"));
			this.Add(new Command("mp_blockstyle", CommandType.cvar, "1", "Sets the style of capture point blocking used. 0 = Blocks break captures completely. 1 = Blocks only pause captures."));
			this.Add(new Command("mp_bonusroundtime", CommandType.cvar, "15", "Time after round win until round restarts"));
			this.Add(new Command("mp_buy_allow_grenades", CommandType.cvar, "1", "Whether players can purchase grenades from the buy menu or not."));
			this.Add(new Command("mp_buy_allow_guns", CommandType.cvar, "255", "Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32)."));
			this.Add(new Command("mp_buy_anywhere", CommandType.cvar, "0", "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists."));
			this.Add(new Command("mp_buy_during_immunity", CommandType.cvar, "0", "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists."));
			this.Add(new Command("mp_buytime", CommandType.cvar, "90", "How many seconds after round start players can buy items for."));
			this.Add(new Command("mp_c4_cannot_be_defused", CommandType.cvar, "0", "If set, the planted c4 cannot be defused."));
			this.Add(new Command("mp_c4timer", CommandType.cvar, "40", "how long from when the C4 is armed until it blows"));
			this.Add(new Command("mp_capdeteriorate_time", CommandType.cvar, "90.0", "Time it takes for a full capture point to deteriorate."));
			this.Add(new Command("mp_capstyle", CommandType.cvar, "1", "Sets the style of capture points used. 0 = Fixed players required to cap. 1 = More players cap faster, but longer cap times."));
			this.Add(new Command("mp_clan_ready_signal", CommandType.cvar, "ready", "Text that team leader from each team must speak for the match to begin"));
			this.Add(new Command("mp_clan_readyrestart", CommandType.cvar, "0", "If non-zero, game will restart once someone from each team gives the ready signal"));
			this.Add(new Command("mp_competitive_endofmatch_extra_time", CommandType.cvar, "15", "After a competitive match finishes rematch voting extra time is given for rankings."));
			this.Add(new Command("mp_consecutive_loss_aversion", CommandType.cvar, "1", "How loss streak is affected with round win: 0 = win fully resets loss bonus, 1 = first win steps down loss bonus, 2 = first win holds loss bonus and step down starting with second win"));
			this.Add(new Command("mp_consecutive_loss_max", CommandType.cvar, "4", ""));
			this.Add(new Command("mp_coop_force_join_ct", CommandType.cvar, "0", "If set, real players will auto join CT on join."));
			this.Add(new Command("mp_coopmission_bot_difficulty_offset", CommandType.cvar, "0", "The difficulty offset modifier for bots during coop missions."));
			this.Add(new Command("mp_coopmission_dz", CommandType.cvar, "0", "Whether this a coop mission leveraging the DZ universe (tablets, choppers, drones, etc)."));
			this.Add(new Command("mp_coopmission_dz_use_bt", CommandType.cvar, "1", "Use new AI system for bots or not."));
			this.Add(new Command("mp_coopmission_mission_number", CommandType.cvar, "0", "Which mission the map should run after it loads."));
			this.Add(new Command("mp_ct_default_melee", CommandType.cvar, "weapon_knife", "The default melee weapon that the CTs will spawn with.  Even if this is blank, a knife will be given.  To give a taser, it should look like this: 'weapon_knife weapon_taser'.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!"));
			this.Add(new Command("mp_ct_default_secondary", CommandType.cvar, "weapon_hkp2000", "The default secondary (pistol) weapon that the CTs will spawn with"));
			this.Add(new Command("mp_damage_headshot_only", CommandType.cvar, "0", "Determines whether non-headshot hits do any damage."));
			this.Add(new Command("mp_damage_scale_ct_body", CommandType.cvar, "1.0", "Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"));
			this.Add(new Command("mp_damage_scale_ct_head", CommandType.cvar, "1.0", "Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied."));
			this.Add(new Command("mp_damage_scale_t_body", CommandType.cvar, "1.0", "Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"));
			this.Add(new Command("mp_damage_scale_t_head", CommandType.cvar, "1.0", "Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied."));
			this.Add(new Command("mp_damage_vampiric_amount", CommandType.cvar, "0", "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker."));
			this.Add(new Command("mp_death_drop_breachcharge", CommandType.cvar, "1", "Drop breachcharge on player death"));
			this.Add(new Command("mp_death_drop_c4", CommandType.cvar, "1", "Whether c4 is droppable"));
			this.Add(new Command("mp_death_drop_defuser", CommandType.cvar, "1", "Drop defuser on player death"));
			this.Add(new Command("mp_death_drop_grenade", CommandType.cvar, "2", "Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades"));
			this.Add(new Command("mp_death_drop_gun", CommandType.cvar, "1", "Which gun to drop on player death: 0=none, 1=best, 2=current or best"));
			this.Add(new Command("mp_death_drop_healthshot", CommandType.cvar, "1", "Drop healthshot on player death"));
			this.Add(new Command("mp_death_drop_taser", CommandType.cvar, "1", "Drop taser on player death"));
			this.Add(new Command("mp_deathcam_skippable", CommandType.cvar, "1", "Determines whether a player can early-out of the deathcam."));
			this.Add(new Command("mp_debug_timeouts", CommandType.cmd, "", "Prints time outs to the console for debugging"));
			this.Add(new Command("mp_default_team_winner_no_objective", CommandType.cvar, "-1", "If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round."));
			this.Add(new Command("mp_defaultteam", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_defuser_allocation", CommandType.cvar, "0", "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone"));
			this.Add(new Command("mp_disable_autokick", CommandType.cmd, "", "Prevents a userid from being auto-kicked"));
			this.Add(new Command("mp_disable_respawn_times", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_disconnect_kills_bots", CommandType.cvar, "0", "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players."));
			this.Add(new Command("mp_disconnect_kills_players", CommandType.cvar, "1", "When a player disconnects, kill them first (triggering item drops, stats, etc.)"));
			this.Add(new Command("mp_display_kill_assists", CommandType.cvar, "1", "Whether to display and score player assists"));
			this.Add(new Command("mp_dm_bonus_length_max", CommandType.cvar, "30", "Maximum time the bonus time will last (in seconds)"));
			this.Add(new Command("mp_dm_bonus_length_min", CommandType.cvar, "30", "Minimum time the bonus time will last (in seconds)"));
			this.Add(new Command("mp_dm_bonus_percent", CommandType.cvar, "50", "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period."));
			this.Add(new Command("mp_dm_bonus_respawn", CommandType.cvar, "0", "When attempting to get the bonus weapon in deathmatch, whether we should respawn you with it or just give it to you directly"));
			this.Add(new Command("mp_dm_bonusweapon_dogtags", CommandType.cvar, "0", "Additional dogtags to drop when making a kill with the bonus weapon"));
			this.Add(new Command("mp_dm_dogtag_score", CommandType.cvar, "0", "Points to award for picking up a dogtag in deathmatch."));
			this.Add(new Command("mp_dm_kill_base_score", CommandType.cvar, "10", "Number of base points to award for a kill in deathmatch.  Cheaper weapons award 1 or 2 additional points."));
			this.Add(new Command("mp_dm_teammode", CommandType.cvar, "0", "In deathmatch, enables team DM visuals & scoring"));
			this.Add(new Command("mp_dm_teammode_bonus_score", CommandType.cvar, "1", "Team deathmatch victory points to award for kill with bonus weapon"));
			this.Add(new Command("mp_dm_teammode_dogtag_score", CommandType.cvar, "0", "Team deathmatch victory points to award for collecting enemy dogtags"));
			this.Add(new Command("mp_dm_teammode_kill_score", CommandType.cvar, "1", "Team deathmatch victory points to award for enemy kill"));
			this.Add(new Command("mp_dm_time_between_bonus_max", CommandType.cvar, "40", "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)"));
			this.Add(new Command("mp_dm_time_between_bonus_min", CommandType.cvar, "30", "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)"));
			this.Add(new Command("mp_do_warmup_offine", CommandType.cvar, "0", "Whether or not to do a warmup period at the start of a match in an offline (bot) match."));
			this.Add(new Command("mp_do_warmup_period", CommandType.cvar, "1", "Whether or not to do a warmup period at the start of a match."));
			this.Add(new Command("mp_dogtag_despawn_on_killer_death", CommandType.cvar, "1", "Whether dogtags should despawn when their killer dies"));
			this.Add(new Command("mp_dogtag_despawn_time", CommandType.cvar, "120", "How many seconds dogtags should stay around before despawning automatically (0 = infinite)"));
			this.Add(new Command("mp_dogtag_pickup_rule", CommandType.cvar, "0", "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)"));
			this.Add(new Command("mp_drop_grenade_enable", CommandType.cvar, "0", "Allows players to drop grenades."));
			this.Add(new Command("mp_drop_knife_enable", CommandType.cvar, "0", "Allows players to drop knives."));
			this.Add(new Command("mp_dump_timers", CommandType.cmd, "", "Prints round timers to the console for debugging"));
			this.Add(new Command("mp_economy_reset_rounds", CommandType.cvar, "0", "Reset all player money every N rounds (0 for never)"));
			this.Add(new Command("mp_enableroundwaittime", CommandType.cvar, "1", "Enable timers to wait between rounds."));
			this.Add(new Command("mp_endmatch_votenextmap", CommandType.cvar, "1", "Whether or not players vote for the next map at the end of the match when the final scoreboard comes up"));
			this.Add(new Command("mp_endmatch_votenextmap_keepcurrent", CommandType.cvar, "1", "If set, keeps the current map in the list of voting options.  If not set, the current map will not appear in the list of voting options."));
			this.Add(new Command("mp_endmatch_votenextmap_wargames_nummaps", CommandType.cvar, "3", "Maximum number of maps to include in endmatch voting during War Games"));
			this.Add(new Command("mp_endmatch_votenextmap_wargames_nummodes", CommandType.cvar, "1", "Maximum number of other War Games to include in endmatch voting during War Games"));
			this.Add(new Command("mp_endwarmup_player_count", CommandType.cvar, "0", "Number of players required to be connected to end warmup early. 0 to require maximum players for mode."));
			this.Add(new Command("mp_equipment_reset_rounds", CommandType.cvar, "0", "Reset all player equipment every N rounds (0 for never)"));
			this.Add(new Command("mp_facefronttime", CommandType.cvar, "2", "After this amount of time of standing in place but aiming to one side, go ahead and move feet to face upper body."));
			this.Add(new Command("mp_falldamage", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_feetyawrate", CommandType.cvar, "400", "How many degrees per second that we can turn our feet or upper body."));
			this.Add(new Command("mp_flashlight", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_flinch_punch_scale", CommandType.cvar, "3", "Scalar for first person view punch when getting hit."));
			this.Add(new Command("mp_footsteps", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_footsteps_serverside", CommandType.cvar, "1", "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server."));
			this.Add(new Command("mp_force_assign_teams", CommandType.cvar, "0", "Players don't get to choose what team they are on, it is auto assinged."));
			this.Add(new Command("mp_force_pick_time", CommandType.cvar, "15", "The amount of time a player has on the team screen to make a selection before being auto-teamed"));
			this.Add(new Command("mp_forcecamera", CommandType.cvar, "1", "Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_fadetoblack)."));
			this.Add(new Command("mp_forcerespawn", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_forcerespawnplayers", CommandType.cmd, "", "Force all players to respawn."));
			this.Add(new Command("mp_forcewin", CommandType.cmd, "", "Forces team to win"));
			this.Add(new Command("mp_fraglimit", CommandType.cvar, "0", "The number of kills at which the map ends"));
			this.Add(new Command("mp_free_armor", CommandType.cvar, "0", "Determines whether kevlar (1+) and/or helmet (2+) are given automatically."));
			this.Add(new Command("mp_freezetime", CommandType.cvar, "6", "how many seconds to keep players frozen when the round starts"));
			this.Add(new Command("mp_friendlyfire", CommandType.cvar, "0", "Allows team members to injure other members of their team"));
			this.Add(new Command("mp_ggprogressive_random_weapon_kills_needed", CommandType.cvar, "2", "If mp_ggprogressive_use_random_weapons is set, this is the number of kills needed with each weapon"));
			this.Add(new Command("mp_ggprogressive_round_restart_delay", CommandType.cvar, "15.0", "Number of seconds to delay before restarting a round after a win in gungame progessive"));
			this.Add(new Command("mp_ggprogressive_use_random_weapons", CommandType.cvar, "1", "If set, selects random weapons from set categories for the progression order"));
			this.Add(new Command("mp_ggtr_always_upgrade", CommandType.cvar, "0", "Award this many upgrade points every round in demolition mode"));
			this.Add(new Command("mp_ggtr_bomb_defuse_bonus", CommandType.cvar, "1", "Number of bonus upgrades to award the CTs when they defuse a gun game bomb"));
			this.Add(new Command("mp_ggtr_bomb_detonation_bonus", CommandType.cvar, "1", "Number of bonus upgrades to award the Ts when they detonate a gun game bomb"));
			this.Add(new Command("mp_ggtr_bomb_pts_for_flash", CommandType.cvar, "4", "Kill points required in a round to get a bonus flash grenade"));
			this.Add(new Command("mp_ggtr_bomb_pts_for_he", CommandType.cvar, "3", "Kill points required in a round to get a bonus HE grenade"));
			this.Add(new Command("mp_ggtr_bomb_pts_for_molotov", CommandType.cvar, "5", "Kill points required in a round to get a bonus molotov cocktail"));
			this.Add(new Command("mp_ggtr_bomb_pts_for_upgrade", CommandType.cvar, "2.0", "Kill points required to upgrade a player's weapon"));
			this.Add(new Command("mp_ggtr_bomb_respawn_delay", CommandType.cvar, "0.0", "Number of seconds to delay before making the bomb available to a respawner in gun game"));
			this.Add(new Command("mp_ggtr_end_round_kill_bonus", CommandType.cvar, "1", "Number of bonus points awarded in Demolition Mode when knife kill ends round"));
			this.Add(new Command("mp_ggtr_halftime_delay", CommandType.cvar, "0.0", "Number of seconds to delay during TR Mode halftime"));
			this.Add(new Command("mp_ggtr_last_weapon_kill_ends_half", CommandType.cvar, "0", "End the half and give a team round point when a player makes a kill using the final weapon"));
			this.Add(new Command("mp_ggtr_num_rounds_autoprogress", CommandType.cvar, "3", "Upgrade the player's weapon after this number of rounds without upgrading"));
			this.Add(new Command("mp_give_player_c4", CommandType.cvar, "1", "Whether this map should spawn a c4 bomb for a player or not."));
			this.Add(new Command("mp_global_damage_per_second", CommandType.cvar, "0.0", "If above 0, deal non-lethal damage to players over time."));
			this.Add(new Command("mp_guardian_add_bounds_pt", CommandType.cmd, "", "mp_guardian_add_bounds_pt"));
			this.Add(new Command("mp_guardian_bot_money_per_wave", CommandType.cvar, "800", "The amount of money bots get time each wave the players complete.  This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave."));
			this.Add(new Command("mp_guardian_clear_all_bounds", CommandType.cmd, "", "mp_guardian_clear_all_bounds"));
			this.Add(new Command("mp_guardian_draw_bounds", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_guardian_emit_bounds_config", CommandType.cmd, "", "mp_guardian_emit_bounds_config"));
			this.Add(new Command("mp_guardian_force_collect_hostages_timeout", CommandType.cvar, "50", "Force bots to collect hostages after this amount of time if no enemy has been seen."));
			this.Add(new Command("mp_guardian_give_random_grenades_to_bots", CommandType.cvar, "1", "If set guardian bots will be given grenades at the beginning of the wave."));
			this.Add(new Command("mp_guardian_loc_string_hud", CommandType.cvar, "#guardian_mission_type_kills", "Loc string token to use on hud for this mission, otherwise default to kills with weapon."));
			this.Add(new Command("mp_guardian_new_bounds", CommandType.cmd, "", "mp_guardian_new_bounds"));
			this.Add(new Command("mp_guardian_player_dist_max", CommandType.cvar, "2000", "The maximum distance a player is allowed to get from the bombsite before they're killed."));
			this.Add(new Command("mp_guardian_player_dist_min", CommandType.cvar, "1300", "The distance at which we start to warn a player when they are too far from the guarded bombsite."));
			this.Add(new Command("mp_guardian_shoot_point", CommandType.cmd, "", "mp_guardian_shoot_point"));
			this.Add(new Command("mp_guardian_special_kills_needed", CommandType.cvar, "10", "The number of kills needed with a specific weapon."));
			this.Add(new Command("mp_guardian_special_weapon_needed", CommandType.cvar, "awp", "The weapon that needs to be used to increment the kills needed to complete the mission."));
			this.Add(new Command("mp_guardian_target_site", CommandType.cvar, "-1", "If set to the index of a bombsite, will cause random spawns to be only created near that site."));
			this.Add(new Command("mp_halftime", CommandType.cvar, "0", "Determines whether the match switches sides in a halftime event."));
			this.Add(new Command("mp_halftime_duration", CommandType.cvar, "15.0", "Number of seconds that halftime lasts"));
			this.Add(new Command("mp_halftime_pausematch", CommandType.cvar, "0", "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin."));
			this.Add(new Command("mp_halftime_pausetimer", CommandType.cvar, "0", "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer."));
			this.Add(new Command("mp_heavyassaultsuit_aimpunch", CommandType.cvar, "1.0", "How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot"));
			this.Add(new Command("mp_heavyassaultsuit_cooldown", CommandType.cvar, "5", "Determines cooldown of purchase."));
			this.Add(new Command("mp_heavyassaultsuit_deploy_timescale", CommandType.cvar, "0.8", "How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed)"));
			this.Add(new Command("mp_heavyassaultsuit_speed", CommandType.cvar, "130", "The max speed of a player when they are wearing the heavy assault suit"));
			this.Add(new Command("mp_heavybot_damage_reduction_scale", CommandType.cvar, "1.0", "How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage)"));
			this.Add(new Command("mp_hostagepenalty", CommandType.cvar, "10", "Terrorist are kicked for killing too much hostages"));
			this.Add(new Command("mp_hostages_max", CommandType.cvar, "2", "Maximum number of hostages to spawn."));
			this.Add(new Command("mp_hostages_rescuetime", CommandType.cvar, "1", "Additional time added to round time if a hostage is reached by a CT."));
			this.Add(new Command("mp_hostages_rescuetowin", CommandType.cvar, "1", "0 == all alive, any other number is the number the CT's need to rescue to win the round."));
			this.Add(new Command("mp_hostages_run_speed_modifier", CommandType.cvar, "1.0", "Default is 1.0, slow down hostages by setting this to < 1.0."));
			this.Add(new Command("mp_hostages_spawn_farthest", CommandType.cvar, "0", "When enabled will consistently force the farthest hostages to spawn."));
			this.Add(new Command("mp_hostages_spawn_same_every_round", CommandType.cvar, "1", "0 = spawn hostages randomly every round, 1 = same spawns for entire match."));
			this.Add(new Command("mp_hostages_takedamage", CommandType.cvar, "0", "Whether or not hostages can be hurt."));
			this.Add(new Command("mp_humanteam", CommandType.cvar, "any", "Restricts human players to a single team {any, CT, T}"));
			this.Add(new Command("mp_ignore_round_win_conditions", CommandType.cvar, "0", "Ignore conditions which would end the current round"));
			this.Add(new Command("mp_ik", CommandType.cvar, "1", "Use IK on in-place turns."));
			this.Add(new Command("mp_join_grace_time", CommandType.cvar, "0.0", "Number of seconds after round start to allow a player to join a game"));
			this.Add(new Command("mp_limitteams", CommandType.cvar, "2", "Max # of players 1 team can have over another (0 disables check)"));
			this.Add(new Command("mp_logdetail", CommandType.cvar, "0", "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)"));
			this.Add(new Command("mp_logdetail_items", CommandType.cvar, "0", "Logs a line any time a player acquires or loses an item."));
			this.Add(new Command("mp_logdistance_2d", CommandType.cvar, "250", "Enables distance logging every so many units"));
			this.Add(new Command("mp_logdistance_sec", CommandType.cvar, "15", "Enables distance logging every so many seconds"));
			this.Add(new Command("mp_logloadouts", CommandType.cvar, "1", "Enables distance logging with full loadouts"));
			this.Add(new Command("mp_logmoney", CommandType.cvar, "0", "Enables money logging.  Values are: 0=off, 1=on"));
			this.Add(new Command("mp_match_can_clinch", CommandType.cvar, "1", "Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?"));
			this.Add(new Command("mp_match_end_changelevel", CommandType.cvar, "0", "At the end of the match, perform a changelevel even if next map is the same"));
			this.Add(new Command("mp_match_end_restart", CommandType.cvar, "0", "At the end of the match, perform a restart instead of loading a new map"));
			this.Add(new Command("mp_match_restart_delay", CommandType.cvar, "25", "Time (in seconds) until a match restarts."));
			this.Add(new Command("mp_max_armor", CommandType.cvar, "2", "Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet"));
			this.Add(new Command("mp_maxmoney", CommandType.cvar, "16000", "maximum amount of money allowed in a player's account"));
			this.Add(new Command("mp_maxrounds", CommandType.cvar, "0", "max number of rounds to play before server changes maps"));
			this.Add(new Command("mp_molotovusedelay", CommandType.cvar, "15.0", "Number of seconds to delay before the molotov can be used after acquiring it"));
			this.Add(new Command("mp_only_cts_rescue_hostages", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_overtime_enable", CommandType.cvar, "0", "If a match ends in a tie, use overtime rules to determine winner"));
			this.Add(new Command("mp_overtime_halftime_pausetimer", CommandType.cvar, "0", "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer."));
			this.Add(new Command("mp_overtime_maxrounds", CommandType.cvar, "6", "When overtime is enabled play additional rounds to determine winner"));
			this.Add(new Command("mp_overtime_startmoney", CommandType.cvar, "10000", "Money assigned to all players at start of every overtime half"));
			this.Add(new Command("mp_pause_match", CommandType.cmd, "", "Pause the match in the next freeze time"));
			this.Add(new Command("mp_plant_c4_anywhere", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_player_healthbuffer_decay_rate", CommandType.cvar, "0", "When a player has buffer health, this is how fast it ticks down."));
			this.Add(new Command("mp_playercashawards", CommandType.cvar, "1", "Players can earn money by performing in-game actions"));
			this.Add(new Command("mp_playerid", CommandType.cvar, "0", "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names"));
			this.Add(new Command("mp_playerid_delay", CommandType.cvar, "0.4", "Number of seconds to delay showing information in the status bar"));
			this.Add(new Command("mp_playerid_hold", CommandType.cvar, "0.1", "Number of seconds to keep showing old information in the status bar"));
			this.Add(new Command("mp_radar_showall", CommandType.cvar, "0", "Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists."));
			this.Add(new Command("mp_randomspawn", CommandType.cvar, "0", "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs."));
			this.Add(new Command("mp_randomspawn_dist", CommandType.cvar, "0", "If using mp_randomspawn, determines whether to test distance when selecting this spot."));
			this.Add(new Command("mp_randomspawn_los", CommandType.cvar, "1", "If using mp_randomspawn, determines whether to test Line of Sight when spawning."));
			this.Add(new Command("mp_require_gun_use_to_acquire", CommandType.cvar, "0", "Whether guns must be +used to acquire or default is touch-to-pickup"));
			this.Add(new Command("mp_respawn_immunitytime", CommandType.cvar, "4.0", "How many seconds after respawn immunity lasts."));
			this.Add(new Command("mp_respawn_on_death_ct", CommandType.cvar, "0", "When set to 1, counter-terrorists will respawn after dying."));
			this.Add(new Command("mp_respawn_on_death_t", CommandType.cvar, "0", "When set to 1, terrorists will respawn after dying."));
			this.Add(new Command("mp_respawnwavetime", CommandType.cvar, "10.0", "Time between respawn waves."));
			this.Add(new Command("mp_respawnwavetime_ct", CommandType.cvar, "10.0", "Time between respawn waves for CTs."));
			this.Add(new Command("mp_respawnwavetime_t", CommandType.cvar, "10.0", "Time between respawn waves for Terrorists."));
			this.Add(new Command("mp_restartgame", CommandType.cvar, "0", "If non-zero, game will restart in the specified number of seconds"));
			this.Add(new Command("mp_restartround", CommandType.cvar, "0", "If non-zero, the current round will restart in the specified number of seconds"));
			this.Add(new Command("mp_round_restart_delay", CommandType.cvar, "7.0", "Number of seconds to delay before restarting a round after a win"));
			this.Add(new Command("mp_roundtime", CommandType.cvar, "5", "How many minutes each round takes."));
			this.Add(new Command("mp_roundtime_defuse", CommandType.cvar, "0", "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead."));
			this.Add(new Command("mp_roundtime_deployment", CommandType.cvar, "5", "How many minutes deployment for coop mission takes."));
			this.Add(new Command("mp_roundtime_hostage", CommandType.cvar, "0", "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead."));
			this.Add(new Command("mp_scrambleteams", CommandType.cmd, "", "Scramble the teams and restart the game"));
			this.Add(new Command("mp_shield_speed_deployed", CommandType.cvar, "170", "The max speed of a player when they have a shield deployed"));
			this.Add(new Command("mp_shield_speed_holstered", CommandType.cvar, "200", "The max speed of a player when they have a shield holstered"));
			this.Add(new Command("mp_showcleanedupents", CommandType.cvar, "0", "Show entities that are removed on round respawn."));
			this.Add(new Command("mp_showroundtransitions", CommandType.cvar, "0", "Show gamestate round transitions."));
			this.Add(new Command("mp_solid_teammates", CommandType.cvar, "1", "How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads"));
			this.Add(new Command("mp_spawnprotectiontime", CommandType.cvar, "5", "Kick players who team-kill within this many seconds of a round restart."));
			this.Add(new Command("mp_spec_swapplayersides", CommandType.cvar, "0", "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel."));
			this.Add(new Command("mp_spectators_max", CommandType.cvar, "2", "How many spectators are allowed in a match."));
			this.Add(new Command("mp_stalemate_at_timelimit", CommandType.cvar, "0", "Allow the match to end when mp_timelimit hits instead of waiting for the end of the current round."));
			this.Add(new Command("mp_stalemate_enable", CommandType.cvar, "0", "Enable/Disable stalemate mode."));
			this.Add(new Command("mp_stalemate_timelimit", CommandType.cvar, "240", "Timelimit (in seconds) of the stalemate round."));
			this.Add(new Command("mp_starting_losses", CommandType.cvar, "0", "Determines what the initial loss streak is."));
			this.Add(new Command("mp_startmoney", CommandType.cvar, "800", "amount of money each player gets when they reset"));
			this.Add(new Command("mp_suicide_time", CommandType.cvar, "5", "Specifies number of seconds required to wait before another suicide."));
			this.Add(new Command("mp_swapteams", CommandType.cmd, "", "Swap the teams and restart the game"));
			this.Add(new Command("mp_switchteams", CommandType.cmd, "", "Switch teams and restart the game"));
			this.Add(new Command("mp_t_default_melee", CommandType.cvar, "weapon_knife", "The default melee weapon that the Ts will spawn with"));
			this.Add(new Command("mp_t_default_secondary", CommandType.cvar, "weapon_glock", "The default secondary (pistol) weapon that the Ts will spawn with"));
			this.Add(new Command("mp_tagging_scale", CommandType.cvar, "1.0", "Scalar for player tagging modifier when hit. Lower values for greater tagging."));
			this.Add(new Command("mp_taser_recharge_time", CommandType.cvar, "-1", "Determines recharge time for taser. -1 = disabled."));
			this.Add(new Command("mp_td_dmgtokick", CommandType.cvar, "300", "The damage threshhold players have to exceed in a match to get kicked."));
			this.Add(new Command("mp_td_dmgtowarn", CommandType.cvar, "200", "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked."));
			this.Add(new Command("mp_td_spawndmgthreshold", CommandType.cvar, "50", "The damage threshold players have to exceed at the start of the round to be warned/kick."));
			this.Add(new Command("mp_tdm_healthshot_killcount", CommandType.cvar, "3", "Grant healthshots in team deathmatch after n kills"));
			this.Add(new Command("mp_team_timeout_max", CommandType.cvar, "1", "Number of timeouts each team gets per match."));
			this.Add(new Command("mp_team_timeout_time", CommandType.cvar, "60", "Duration of each timeout."));
			this.Add(new Command("mp_teamcashawards", CommandType.cvar, "1", "Teams can earn money by performing in-game actions"));
			this.Add(new Command("mp_teamlist", CommandType.cvar, "hgrunt;scientist", ""));
			this.Add(new Command("mp_teammatchstat_cycletime", CommandType.cvar, "45", "Cycle match stats after so many seconds"));
			this.Add(new Command("mp_teammatchstat_holdtime", CommandType.cvar, "5", "Decide on a match stat and hold it additionally for at least so many seconds"));
			this.Add(new Command("mp_teammates_are_enemies", CommandType.cvar, "0", "When set, your teammates act as enemies and all players are valid targets."));
			this.Add(new Command("mp_teamoverride", CommandType.cvar, "1", ""));
			this.Add(new Command("mp_teamplay", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_teamprediction_pct", CommandType.cvar, "0", "A value between 1 and 99 will show predictions in favor of CT team."));
			this.Add(new Command("mp_teamprediction_txt", CommandType.cvar, "#SFUIHUD_Spectate_Predictions", "A value between 1 and 99 will set predictions in favor of first team."));
			this.Add(new Command("mp_teams_unbalance_limit", CommandType.cvar, "1", "Teams are unbalanced when one team has this many more players than the other team. (0 disables check)"));
			this.Add(new Command("mp_teamscore_max", CommandType.cvar, "0", "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)"));
			this.Add(new Command("mp_timelimit", CommandType.cvar, "5", "game time per map in minutes"));
			this.Add(new Command("mp_tkpunish", CommandType.cvar, "0", "Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}"));
			this.Add(new Command("mp_tournament", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_tournament_restart", CommandType.cmd, "", "Restart Tournament Mode on the current level."));
			this.Add(new Command("mp_tournament_whitelist", CommandType.cvar, "item_whitelist.txt", "Specifies the item whitelist file to use."));
			this.Add(new Command("mp_unpause_match", CommandType.cmd, "", "Resume the match"));
			this.Add(new Command("mp_use_respawn_waves", CommandType.cvar, "0", "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead."));
			this.Add(new Command("mp_waitingforplayers_cancel", CommandType.cvar, "0", "Set to 1 to end the WaitingForPlayers period."));
			this.Add(new Command("mp_waitingforplayers_restart", CommandType.cvar, "0", "Set to 1 to start or restart the WaitingForPlayers period."));
			this.Add(new Command("mp_waitingforplayers_time", CommandType.cvar, "0", "WaitingForPlayers time length in seconds"));
			this.Add(new Command("mp_warmup_end", CommandType.cmd, "", "End warmup immediately."));
			this.Add(new Command("mp_warmup_pausetimer", CommandType.cvar, "0", "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer."));
			this.Add(new Command("mp_warmup_start", CommandType.cmd, "", "Start warmup."));
			this.Add(new Command("mp_warmuptime", CommandType.cvar, "30", "How long the warmup period lasts. Changing this value resets warmup."));
			this.Add(new Command("mp_warmuptime_all_players_connected", CommandType.cvar, "0", "Warmup time to use when all players have connected. 0 to disable."));
			this.Add(new Command("mp_weapon_melee_touch_time_after_hit", CommandType.cvar, "5.0", ""));
			this.Add(new Command("mp_weapon_next_owner_touch_time", CommandType.cvar, "1.3", ""));
			this.Add(new Command("mp_weapon_prev_owner_touch_time", CommandType.cvar, "1.5", ""));
			this.Add(new Command("mp_weapon_self_inflict_amount", CommandType.cvar, "0", "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss."));
			this.Add(new Command("mp_weapons_allow_heavy", CommandType.cvar, "-1", "Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs."));
			this.Add(new Command("mp_weapons_allow_heavyassaultsuit", CommandType.cvar, "0", "Determines whether heavyassaultsuit is permitted."));
			this.Add(new Command("mp_weapons_allow_map_placed", CommandType.cvar, "0", "If this convar is set, when a match starts, the game will not delete weapons placed in the map."));
			this.Add(new Command("mp_weapons_allow_pistols", CommandType.cvar, "-1", "Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs."));
			this.Add(new Command("mp_weapons_allow_rifles", CommandType.cvar, "-1", "Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs."));
			this.Add(new Command("mp_weapons_allow_smgs", CommandType.cvar, "-1", "Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs."));
			this.Add(new Command("mp_weapons_allow_typecount", CommandType.cvar, "5", "Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit)."));
			this.Add(new Command("mp_weapons_allow_zeus", CommandType.cvar, "1", "Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit)."));
			this.Add(new Command("mp_weapons_glow_on_ground", CommandType.cvar, "0", "If this convar is set, weapons on the ground will have a glow around them."));
			this.Add(new Command("mp_weapons_max_gun_purchases_per_weapon_per_match", CommandType.cvar, "-1", "Max number of times a player may purchase any weapon per match"));
			this.Add(new Command("mp_weaponstay", CommandType.cvar, "0", ""));
			this.Add(new Command("mp_win_panel_display_time", CommandType.cvar, "3", "The amount of time to show the win panel between matches / halfs"));
			this.Add(new Command("mp_winlimit", CommandType.cvar, "0", "Max score one team can reach before server changes maps"));
			this.Add(new Command("nav_add_to_selected_set", CommandType.cmd, "", "Add current area to the selected set."));
			this.Add(new Command("nav_add_to_selected_set_by_id", CommandType.cmd, "", "Add specified area id to the selected set."));
			this.Add(new Command("nav_analyze", CommandType.cmd, "", "Re-analyze the current Navigation Mesh and save it to disk."));
			this.Add(new Command("nav_analyze_scripted", CommandType.cmd, "", "commandline hook to run a nav_analyze and then quit."));
			this.Add(new Command("nav_area_max_size", CommandType.cvar, "50", "Max area size created in nav generation"));
			this.Add(new Command("nav_avoid", CommandType.cmd, "", "Toggles the 'avoid this area when possible' flag used by the AI system."));
			this.Add(new Command("nav_begin_area", CommandType.cmd, "", "Defines a corner of a new Area or Ladder. To complete the Area or Ladder, drag the opposite corner to the desired location and issue a 'nav_end_area' command."));
			this.Add(new Command("nav_begin_deselecting", CommandType.cmd, "", "Start continuously removing from the selected set."));
			this.Add(new Command("nav_begin_drag_deselecting", CommandType.cmd, "", "Start dragging a selection area."));
			this.Add(new Command("nav_begin_drag_selecting", CommandType.cmd, "", "Start dragging a selection area."));
			this.Add(new Command("nav_begin_selecting", CommandType.cmd, "", "Start continuously adding to the selected set."));
			this.Add(new Command("nav_begin_shift_xy", CommandType.cmd, "", "Begin shifting the Selected Set."));
			this.Add(new Command("nav_build_ladder", CommandType.cmd, "", "Attempts to build a nav ladder on the climbable surface under the cursor."));
			this.Add(new Command("nav_check_connectivity", CommandType.cmd, "", "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site)."));
			this.Add(new Command("nav_check_file_consistency", CommandType.cmd, "", "Scans the maps directory and reports any missing/out-of-date navigation files."));
			this.Add(new Command("nav_check_floor", CommandType.cmd, "", "Updates the blocked/unblocked status for every nav area."));
			this.Add(new Command("nav_check_stairs", CommandType.cmd, "", "Update the nav mesh STAIRS attribute"));
			this.Add(new Command("nav_chop_selected", CommandType.cmd, "", "Chops all selected areas into their component 1x1 areas"));
			this.Add(new Command("nav_clear_attribute", CommandType.cmd, "", "Remove given nav attribute from all areas in the selected set."));
			this.Add(new Command("nav_clear_selected_set", CommandType.cmd, "", "Clear the selected set."));
			this.Add(new Command("nav_clear_walkable_marks", CommandType.cmd, "", "Erase any previously placed walkable positions."));
			this.Add(new Command("nav_compress_id", CommandType.cmd, "", "Re-orders area and ladder ID's so they are continuous."));
			this.Add(new Command("nav_connect", CommandType.cmd, "", "To connect two Areas, mark the first Area, highlight the second Area, then invoke the connect command. Note that this creates a ONE-WAY connection from the first to the second Area. To make a two-way connection, also connect the second area to the first."));
			this.Add(new Command("nav_coplanar_slope_limit", CommandType.cvar, "0.99", ""));
			this.Add(new Command("nav_coplanar_slope_limit_displacement", CommandType.cvar, "0.7", ""));
			this.Add(new Command("nav_corner_adjust_adjacent", CommandType.cvar, "18", "radius used to raise/lower corners in nearby areas when raising/lowering corners."));
			this.Add(new Command("nav_corner_lower", CommandType.cmd, "", "Lower the selected corner of the currently marked Area."));
			this.Add(new Command("nav_corner_place_on_ground", CommandType.cmd, "", "Places the selected corner of the currently marked Area on the ground."));
			this.Add(new Command("nav_corner_raise", CommandType.cmd, "", "Raise the selected corner of the currently marked Area."));
			this.Add(new Command("nav_corner_select", CommandType.cmd, "", "Select a corner of the currently marked Area. Use multiple times to access all four corners."));
			this.Add(new Command("nav_create_area_at_feet", CommandType.cvar, "0", "Anchor nav_begin_area Z to editing player's feet"));
			this.Add(new Command("nav_create_place_on_ground", CommandType.cvar, "0", "If true, nav areas will be placed flush with the ground when created by hand."));
			this.Add(new Command("nav_crouch", CommandType.cmd, "", "Toggles the 'must crouch in this area' flag used by the AI system."));
			this.Add(new Command("nav_debug_blocked", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_delete", CommandType.cmd, "", "Deletes the currently highlighted Area."));
			this.Add(new Command("nav_delete_marked", CommandType.cmd, "", "Deletes the currently marked Area (if any)."));
			this.Add(new Command("nav_disconnect", CommandType.cmd, "", "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas."));
			this.Add(new Command("nav_displacement_test", CommandType.cvar, "10000", "Checks for nodes embedded in displacements (useful for in-development maps)"));
			this.Add(new Command("nav_dont_hide", CommandType.cmd, "", "Toggles the 'area is not suitable for hiding spots' flag used by the AI system."));
			this.Add(new Command("nav_drag_selection_volume_zmax_offset", CommandType.cvar, "32", "The offset of the nav drag volume top from center"));
			this.Add(new Command("nav_drag_selection_volume_zmin_offset", CommandType.cvar, "32", "The offset of the nav drag volume bottom from center"));
			this.Add(new Command("nav_draw_limit", CommandType.cvar, "500", "The maximum number of areas to draw in edit mode"));
			this.Add(new Command("nav_edit", CommandType.cvar, "0", "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode."));
			this.Add(new Command("nav_end_area", CommandType.cmd, "", "Defines the second corner of a new Area or Ladder and creates it."));
			this.Add(new Command("nav_end_deselecting", CommandType.cmd, "", "Stop continuously removing from the selected set."));
			this.Add(new Command("nav_end_drag_deselecting", CommandType.cmd, "", "Stop dragging a selection area."));
			this.Add(new Command("nav_end_drag_selecting", CommandType.cmd, "", "Stop dragging a selection area."));
			this.Add(new Command("nav_end_selecting", CommandType.cmd, "", "Stop continuously adding to the selected set."));
			this.Add(new Command("nav_end_shift_xy", CommandType.cmd, "", "Finish shifting the Selected Set."));
			this.Add(new Command("nav_flood_select", CommandType.cmd, "", "Selects the current Area and all Areas connected to it, recursively. To clear a selection, use this command again."));
			this.Add(new Command("nav_gen_cliffs_approx", CommandType.cmd, "", "Mark cliff areas, post-processing approximation"));
			this.Add(new Command("nav_generate", CommandType.cmd, "", "Generate a Navigation Mesh for the current map and save it to disk."));
			this.Add(new Command("nav_generate_fencetops", CommandType.cvar, "1", "Autogenerate nav areas on fence and obstacle tops"));
			this.Add(new Command("nav_generate_fixup_jump_areas", CommandType.cvar, "1", "Convert obsolete jump areas into 2-way connections"));
			this.Add(new Command("nav_generate_incremental", CommandType.cmd, "", "Generate a Navigation Mesh for the current map and save it to disk."));
			this.Add(new Command("nav_generate_incremental_range", CommandType.cvar, "2000", ""));
			this.Add(new Command("nav_generate_incremental_tolerance", CommandType.cvar, "0", "Z tolerance for adding new nav areas."));
			this.Add(new Command("nav_jump", CommandType.cmd, "", "Toggles the 'traverse this area by jumping' flag used by the AI system."));
			this.Add(new Command("nav_ladder_flip", CommandType.cmd, "", "Flips the selected ladder's direction."));
			this.Add(new Command("nav_load", CommandType.cmd, "", "Loads the Navigation Mesh for the current map."));
			this.Add(new Command("nav_lower_drag_volume_max", CommandType.cmd, "", "Lower the top of the drag select volume."));
			this.Add(new Command("nav_lower_drag_volume_min", CommandType.cmd, "", "Lower the bottom of the drag select volume."));
			this.Add(new Command("nav_make_sniper_spots", CommandType.cmd, "", "Chops the marked area into disconnected sub-areas suitable for sniper spots."));
			this.Add(new Command("nav_mark", CommandType.cmd, "", "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands."));
			this.Add(new Command("nav_mark_attribute", CommandType.cmd, "", "Set nav attribute for all areas in the selected set."));
			this.Add(new Command("nav_mark_unnamed", CommandType.cmd, "", "Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting."));
			this.Add(new Command("nav_mark_walkable", CommandType.cmd, "", "Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate a Navigation Mesh."));
			this.Add(new Command("nav_max_view_distance", CommandType.cvar, "0", "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)"));
			this.Add(new Command("nav_max_vis_delta_list_length", CommandType.cvar, "64", ""));
			this.Add(new Command("nav_merge", CommandType.cmd, "", "To merge two Areas into one, mark the first Area, highlight the second by pointing your cursor at it, and invoke the merge command."));
			this.Add(new Command("nav_merge_mesh", CommandType.cmd, "", "Merges a saved selected set into the current mesh."));
			this.Add(new Command("nav_no_hostages", CommandType.cmd, "", "Toggles the 'hostages cannot use this area' flag used by the AI system."));
			this.Add(new Command("nav_no_jump", CommandType.cmd, "", "Toggles the 'dont jump in this area' flag used by the AI system."));
			this.Add(new Command("nav_place_floodfill", CommandType.cmd, "", "Sets the Place of the Area under the cursor to the curent Place, and 'flood-fills' the Place to all adjacent Areas. Flood-filling stops when it hits an Area with the same Place, or a different Place than that of the initial Area."));
			this.Add(new Command("nav_place_list", CommandType.cmd, "", "Lists all place names used in the map."));
			this.Add(new Command("nav_place_pick", CommandType.cmd, "", "Sets the current Place to the Place of the Area under the cursor."));
			this.Add(new Command("nav_place_replace", CommandType.cmd, "", "Replaces all instances of the first place with the second place."));
			this.Add(new Command("nav_place_set", CommandType.cmd, "", "Sets the Place of all selected areas to the current Place."));
			this.Add(new Command("nav_potentially_visible_dot_tolerance", CommandType.cvar, "0.98", ""));
			this.Add(new Command("nav_precise", CommandType.cmd, "", "Toggles the 'dont avoid obstacles' flag used by the AI system."));
			this.Add(new Command("nav_quicksave", CommandType.cvar, "0", "Set to one to skip the time consuming phases of the analysis.  Useful for data collection and testing."));
			this.Add(new Command("nav_raise_drag_volume_max", CommandType.cmd, "", "Raise the top of the drag select volume."));
			this.Add(new Command("nav_raise_drag_volume_min", CommandType.cmd, "", "Raise the bottom of the drag select volume."));
			this.Add(new Command("nav_recall_selected_set", CommandType.cmd, "", "Re-selects the stored selected set."));
			this.Add(new Command("nav_remove_from_selected_set", CommandType.cmd, "", "Remove current area from the selected set."));
			this.Add(new Command("nav_remove_jump_areas", CommandType.cmd, "", "Removes legacy jump areas, replacing them with connections."));
			this.Add(new Command("nav_restart_after_analysis", CommandType.cvar, "1", "When nav nav_restart_after_analysis finishes, restart the server.  Turning this off can cause crashes, but is useful for incremental generation."));
			this.Add(new Command("nav_run", CommandType.cmd, "", "Toggles the 'traverse this area by running' flag used by the AI system."));
			this.Add(new Command("nav_save", CommandType.cmd, "", "Saves the current Navigation Mesh to disk."));
			this.Add(new Command("nav_save_selected", CommandType.cmd, "", "Writes the selected set to disk for merging into another mesh via nav_merge_mesh."));
			this.Add(new Command("nav_select_blocked_areas", CommandType.cmd, "", "Adds all blocked areas to the selected set"));
			this.Add(new Command("nav_select_damaging_areas", CommandType.cmd, "", "Adds all damaging areas to the selected set"));
			this.Add(new Command("nav_select_half_space", CommandType.cmd, "", "Selects any areas that intersect the given half-space."));
			this.Add(new Command("nav_select_invalid_areas", CommandType.cmd, "", "Adds all invalid areas to the Selected Set."));
			this.Add(new Command("nav_select_obstructed_areas", CommandType.cmd, "", "Adds all obstructed areas to the selected set"));
			this.Add(new Command("nav_select_overlapping", CommandType.cmd, "", "Selects nav areas that are overlapping others."));
			this.Add(new Command("nav_select_radius", CommandType.cmd, "", "Adds all areas in a radius to the selection set"));
			this.Add(new Command("nav_select_stairs", CommandType.cmd, "", "Adds all stairway areas to the selected set"));
			this.Add(new Command("nav_set_place_mode", CommandType.cmd, "", "Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names."));
			this.Add(new Command("nav_shift", CommandType.cmd, "", "Shifts the selected areas by the specified amount"));
			this.Add(new Command("nav_show_approach_points", CommandType.cvar, "0", "Show Approach Points in the Navigation Mesh."));
			this.Add(new Command("nav_show_area_info", CommandType.cvar, "0.5", "Duration in seconds to show nav area ID and attributes while editing"));
			this.Add(new Command("nav_show_compass", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_show_continguous", CommandType.cvar, "0", "Highlight non-contiguous connections"));
			this.Add(new Command("nav_show_danger", CommandType.cvar, "0", "Show current 'danger' levels."));
			this.Add(new Command("nav_show_light_intensity", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_show_node_grid", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_show_node_id", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_show_nodes", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_show_player_counts", CommandType.cvar, "0", "Show current player counts in each area."));
			this.Add(new Command("nav_show_potentially_visible", CommandType.cvar, "0", "Show areas that are potentially visible from the current nav area"));
			this.Add(new Command("nav_simplify_selected", CommandType.cmd, "", "Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas"));
			this.Add(new Command("nav_slope_limit", CommandType.cvar, "0.7", "The ground unit normal's Z component must be greater than this for nav areas to be generated."));
			this.Add(new Command("nav_slope_tolerance", CommandType.cvar, "0.1", "The ground unit normal's Z component must be this close to the nav area's Z component to be generated."));
			this.Add(new Command("nav_snap_to_grid", CommandType.cvar, "0", "Snap to the nav generation grid when creating new nav areas"));
			this.Add(new Command("nav_solid_props", CommandType.cvar, "0", "Make props solid to nav generation/editing"));
			this.Add(new Command("nav_splice", CommandType.cmd, "", "To splice, mark an area, highlight a second area, then invoke the splice command to create a new, connected area between them."));
			this.Add(new Command("nav_split", CommandType.cmd, "", "To split an Area into two, align the split line using your cursor and invoke the split command."));
			this.Add(new Command("nav_split_place_on_ground", CommandType.cvar, "0", "If true, nav areas will be placed flush with the ground when split."));
			this.Add(new Command("nav_stand", CommandType.cmd, "", "Toggles the 'stand while hiding' flag used by the AI system."));
			this.Add(new Command("nav_stop", CommandType.cmd, "", "Toggles the 'must stop when entering this area' flag used by the AI system."));
			this.Add(new Command("nav_store_selected_set", CommandType.cmd, "", "Stores the current selected set for later retrieval."));
			this.Add(new Command("nav_strip", CommandType.cmd, "", "Strips all Hiding Spots, Approach Points, and Encounter Spots from the current Area."));
			this.Add(new Command("nav_subdivide", CommandType.cmd, "", "Subdivides all selected areas."));
			this.Add(new Command("nav_test_node", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_test_node_crouch", CommandType.cvar, "0", ""));
			this.Add(new Command("nav_test_node_crouch_dir", CommandType.cvar, "4", ""));
			this.Add(new Command("nav_test_stairs", CommandType.cmd, "", "Test the selected set for being on stairs"));
			this.Add(new Command("nav_toggle_deselecting", CommandType.cmd, "", "Start or stop continuously removing from the selected set."));
			this.Add(new Command("nav_toggle_in_selected_set", CommandType.cmd, "", "Remove current area from the selected set."));
			this.Add(new Command("nav_toggle_place_mode", CommandType.cmd, "", "Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names."));
			this.Add(new Command("nav_toggle_place_painting", CommandType.cmd, "", "Toggles Place Painting mode. When Place Painting, pointing at an Area will 'paint' it with the current Place."));
			this.Add(new Command("nav_toggle_selected_set", CommandType.cmd, "", "Toggles all areas into/out of the selected set."));
			this.Add(new Command("nav_toggle_selecting", CommandType.cmd, "", "Start or stop continuously adding to the selected set."));
			this.Add(new Command("nav_transient", CommandType.cmd, "", "Toggles the 'area is transient and may become blocked' flag used by the AI system."));
			this.Add(new Command("nav_unmark", CommandType.cmd, "", "Clears the marked Area or Ladder."));
			this.Add(new Command("nav_update_blocked", CommandType.cmd, "", "Updates the blocked/unblocked status for every nav area."));
			this.Add(new Command("nav_update_lighting", CommandType.cmd, "", "Recomputes lighting values"));
			this.Add(new Command("nav_update_visibility_on_edit", CommandType.cvar, "0", "If nonzero editing the mesh will incrementally recompue visibility"));
			this.Add(new Command("nav_use_place", CommandType.cmd, "", "If used without arguments, all available Places will be listed. If a Place argument is given, the current Place is set."));
			this.Add(new Command("nav_walk", CommandType.cmd, "", "Toggles the 'traverse this area by walking' flag used by the AI system."));
			this.Add(new Command("nav_warp_to_mark", CommandType.cmd, "", "Warps the player to the marked area."));
			this.Add(new Command("nav_world_center", CommandType.cmd, "", "Centers the nav mesh in the world"));
			this.Add(new Command("nextmap_print_enabled", CommandType.cvar, "0", "When enabled prints next map to clients"));
			this.Add(new Command("noclip", CommandType.cmd, "", "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable"));
			this.Add(new Command("noclip_fixup", CommandType.cvar, "1", ""));
			this.Add(new Command("notarget", CommandType.cmd, "", "Toggle. Player becomes hidden to NPCs."));
			this.Add(new Command("npc_ally_deathmessage", CommandType.cvar, "1", ""));
			this.Add(new Command("npc_ammo_deplete", CommandType.cmd, "", "Subtracts half of the target's ammo"));
			this.Add(new Command("npc_bipass", CommandType.cmd, "", "Displays the local movement attempts by the given NPC(s) (triangulation detours).  Failed bypass routes are displayed in red, successful bypasses are shown in green.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at."));
			this.Add(new Command("npc_combat", CommandType.cmd, "", "Displays text debugging information about the squad and enemy of the selected NPC  (See Overlay Text)<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_conditions", CommandType.cmd, "", "Displays all the current AI conditions that an NPC has in the overlay text.<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_create", CommandType.cmd, "", "Creates an NPC of the given type where the player is looking (if the given NPC can actually stand at that location).  <br>	Arguments:	[npc_class_name] [name of npc (optional) ] [addon type (optional) ] [name of addon (optional) ]"));
			this.Add(new Command("npc_create_aimed", CommandType.cmd, "", "Creates an NPC aimed away from the player of the given type where the player is looking (if the given NPC can actually stand at that location).  Note that this only works for npc classes that are already in the world.  You can not create an entity that doesn't have an instance in the level.<br>	Arguments:	{npc_class_name}"));
			this.Add(new Command("npc_destroy", CommandType.cmd, "", "Removes the given NPC(s) from the universe<br>Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_destroy_unselected", CommandType.cmd, "", "Removes all NPCs from the universe that aren't currently selected"));
			this.Add(new Command("npc_enemies", CommandType.cmd, "", "Shows memory of NPC.  Draws an X on top of each memory.<br>	Eluded entities drawn in blue (don't know where it went)<br>	Unreachable entities drawn in green (can't get to it)<br>	Current enemy drawn in red<br>	Current target entity drawn in magenta<br>	All other entities drawn in pink<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_focus", CommandType.cmd, "", "Displays red line to NPC's enemy (if has one) and blue line to NPC's target entity (if has one)<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_freeze", CommandType.cmd, "", "Selected NPC(s) will freeze in place (or unfreeze). If there are no selected NPCs, uses the NPC under the crosshair.<br>	Arguments:	-none-"));
			this.Add(new Command("npc_freeze_unselected", CommandType.cmd, "", "Freeze all NPCs not selected"));
			this.Add(new Command("npc_go", CommandType.cmd, "", "Selected NPC(s) will go to the location that the player is looking (shown with a purple box)<br>	Arguments:	-none-"));
			this.Add(new Command("npc_go_do_run", CommandType.cvar, "1", "Set whether should run on NPC go"));
			this.Add(new Command("npc_go_random", CommandType.cmd, "", "Sends all selected NPC(s) to a random node.<br>	Arguments:   	-none-"));
			this.Add(new Command("npc_heal", CommandType.cmd, "", "Heals the target back to full health"));
			this.Add(new Command("npc_height_adjust", CommandType.cvar, "1", "Enable test mode for ik height adjustment"));
			this.Add(new Command("npc_kill", CommandType.cmd, "", "Kills the given NPC(s)<br>Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_nearest", CommandType.cmd, "", "Draw's a while box around the NPC(s) nearest node<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at  "));
			this.Add(new Command("npc_relationships", CommandType.cmd, "", "Displays the relationships between this NPC and all others.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_reset", CommandType.cmd, "", "Reloads schedules for all NPC's from their script files<br>	Arguments:	-none-"));
			this.Add(new Command("npc_route", CommandType.cmd, "", "Displays the current route of the given NPC as a line on the screen.  Waypoints along the route are drawn as small cyan rectangles.  Line is color coded in the following manner:<br>	Blue	- path to a node<br>	Cyan	- detour around an object (triangulation)<br>	Red	- jump<br>	Maroon - path to final target position<br>	Arguments:   	{npc_name} / {npc_class_name} / no argument picks what player is looking at "));
			this.Add(new Command("npc_select", CommandType.cmd, "", "Select or deselects the given NPC(s) for later manipulation.  Selected NPC's are shown surrounded by a red translucent box<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("npc_sentences", CommandType.cvar, "0", ""));
			this.Add(new Command("npc_set_freeze", CommandType.cmd, "", "Selected NPC(s) will freeze in place (or unfreeze). If there are no selected NPCs, uses the NPC under the crosshair.<br>	Arguments:	-none-"));
			this.Add(new Command("npc_set_freeze_unselected", CommandType.cmd, "", "Freeze all NPCs not selected"));
			this.Add(new Command("npc_squads", CommandType.cmd, "", "Obsolete.  Replaced by npc_combat"));
			this.Add(new Command("npc_steering", CommandType.cmd, "", "Displays the steering obstructions of the NPC (used to perform local avoidance)<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_steering_all", CommandType.cmd, "", "Displays the steering obstructions of all NPCs (used to perform local avoidance)<br>"));
			this.Add(new Command("npc_task_text", CommandType.cmd, "", "Outputs text debugging information to the console about the all the tasks + break conditions of the selected NPC current schedule<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at "));
			this.Add(new Command("npc_tasks", CommandType.cmd, "", "Displays detailed text debugging information about the all the tasks of the selected NPC current schedule (See Overlay Text)<br>	Arguments:   	{npc_name} / {npc class_name} / no argument picks what player is looking at "));
			this.Add(new Command("npc_teleport", CommandType.cmd, "", "Selected NPC will teleport to the location that the player is looking (shown with a purple box)<br>	Arguments:	-none-"));
			this.Add(new Command("npc_thinknow", CommandType.cmd, "", "Trigger NPC to think"));
			this.Add(new Command("npc_viewcone", CommandType.cmd, "", "Displays the viewcone of the NPC (where they are currently looking and what the extents of there vision is)<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at"));
			this.Add(new Command("npc_vphysics", CommandType.cvar, "0", ""));
			this.Add(new Command("observer_use", CommandType.cmd, "", ""));
			this.Add(new Command("occlusion_test_camera_margins", CommandType.cvar, "12", "Amount by which the camera (viewer's eye) is expanded for occlusion test. This should be large enough to accommodate eye's movement within a frame or two"));
			this.Add(new Command("occlusion_test_shadow_length", CommandType.cvar, "144", "Max length of completely occluded shadow to consider a player for occlusion test. If shadow provably stops at this distance, the player may be considered for occlusion test. For longer shadows, we just don't do occlusion because we are not likely to find full occlusion when one of the boxes is expanded too much."));
			this.Add(new Command("old_radiusdamage", CommandType.cvar, "0.0", ""));
			this.Add(new Command("paint_alpha_offset_enabled", CommandType.cvar, "1", ""));
			this.Add(new Command("paint_max_surface_border_alpha", CommandType.cvar, "0.7f", ""));
			this.Add(new Command("paint_min_valid_alpha_value", CommandType.cvar, "0.7f", ""));
			this.Add(new Command("paintsplat_bias", CommandType.cvar, "0.1f", "Change bias value for computing circle buffer"));
			this.Add(new Command("paintsplat_max_alpha_noise", CommandType.cvar, "0.1f", "Max noise value of circle alpha"));
			this.Add(new Command("paintsplat_noise_enabled", CommandType.cvar, "1", ""));
			this.Add(new Command("parachute", CommandType.cmd, "", "equips parachute"));
			this.Add(new Command("particle_test_attach_attachment", CommandType.cvar, "0", "Attachment index for attachment mode"));
			this.Add(new Command("particle_test_attach_mode", CommandType.cvar, "follow_attachment", "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'"));
			this.Add(new Command("particle_test_start", CommandType.cmd, "", "Dispatches the test particle system with the parameters specified in particle_test_file,<br> particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("particle_test_stop", CommandType.cmd, "", "Stops all particle systems on the selected entities.<br>	Arguments:   	{entity_name} / {class_name} / no argument picks what player is looking at "));
			this.Add(new Command("phys_debug_check_contacts", CommandType.cvar, "0", ""));
			this.Add(new Command("phys_headshotscale", CommandType.cvar, "1.3", "Modifier for the headshot impulse hits on players"));
			this.Add(new Command("phys_impactforcescale", CommandType.cvar, "1.0", ""));
			this.Add(new Command("phys_penetration_error_time", CommandType.cvar, "10", "Controls the duration of vphysics penetration error boxes."));
			this.Add(new Command("phys_playerscale", CommandType.cvar, "10.0", "This multiplies the bullet impact impuse on players for more dramatic results when players are shot."));
			this.Add(new Command("phys_pushscale", CommandType.cvar, "1", ""));
			this.Add(new Command("phys_show_active", CommandType.cvar, "0", ""));
			this.Add(new Command("phys_speeds", CommandType.cvar, "0", ""));
			this.Add(new Command("phys_stressbodyweights", CommandType.cvar, "5.0", ""));
			this.Add(new Command("phys_timescale", CommandType.cvar, "1", "Scale time for physics"));
			this.Add(new Command("phys_upimpactforcescale", CommandType.cvar, "0.375", ""));
			this.Add(new Command("physics_budget", CommandType.cmd, "", "Times the cost of each active object"));
			this.Add(new Command("physics_constraints", CommandType.cmd, "", "Highlights constraint system graph for an entity"));
			this.Add(new Command("physics_debug_entity", CommandType.cmd, "", "Dumps debug info for an entity"));
			this.Add(new Command("physics_highlight_active", CommandType.cmd, "", "Turns on the absbox for all active physics objects"));
			this.Add(new Command("physics_report_active", CommandType.cmd, "", "Lists all active physics objects"));
			this.Add(new Command("physics_select", CommandType.cmd, "", "Dumps debug info for an entity"));
			this.Add(new Command("physicsshadowupdate_render", CommandType.cvar, "0", ""));
			this.Add(new Command("picker", CommandType.cmd, "", "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.<br>	Arguments:	full - enables all debug information"));
			this.Add(new Command("player_debug_print_damage", CommandType.cvar, "0", "When true, print amount and type of all damage received by player to console."));
			this.Add(new Command("player_old_armor", CommandType.cvar, "0", ""));
			this.Add(new Command("player_ping", CommandType.cmd, "", "Creates a ping notification where the player is looking."));
			this.Add(new Command("player_ping_throttle_decay", CommandType.cvar, "0.58", "Decay for how fast the ping throttle delay will decay"));
			this.Add(new Command("post_jump_crouch", CommandType.cvar, "0.2f", "This determines how long the third person player character will crouch for after landing a jump.  This only affects the third person animation visuals."));
			this.Add(new Command("print_mapgroup_sv", CommandType.cmd, "", "Prints the current mapgroup and the contained maps"));
			this.Add(new Command("prop_active_gib_limit", CommandType.cvar, "64", ""));
			this.Add(new Command("prop_active_gib_max_fade_time", CommandType.cvar, "12", ""));
			this.Add(new Command("prop_break_disable_float", CommandType.cvar, "0", ""));
			this.Add(new Command("prop_debug", CommandType.cmd, "", "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1."));
			this.Add(new Command("prop_dynamic_create", CommandType.cmd, "", "Creates a dynamic prop with a specific .mdl aimed away from where the player is looking.<br>	Arguments: {.mdl name}"));
			this.Add(new Command("prop_physics_create", CommandType.cmd, "", "Creates a physics prop with a specific .mdl aimed away from where the player is looking.<br>	Arguments: {.mdl name}"));
			this.Add(new Command("props_break_max_pieces", CommandType.cvar, "-1", "Maximum prop breakable piece count (-1 = model default)"));
			this.Add(new Command("props_break_max_pieces_perframe", CommandType.cvar, "-1", "Maximum prop breakable piece count per frame (-1 = model default)"));
			this.Add(new Command("pvs_min_player_distance", CommandType.cvar, "1500", "Min distance to player at which PVS is used. At closer distances, PVS assumes we can see a shadow or something else from the player, so it's safer to just always be \"Visible\""));
			this.Add(new Command("r_AirboatViewDampenDamp", CommandType.cvar, "1.0", ""));
			this.Add(new Command("r_AirboatViewDampenFreq", CommandType.cvar, "7.0", ""));
			this.Add(new Command("r_AirboatViewZHeight", CommandType.cvar, "0.0", ""));
			this.Add(new Command("r_JeepFOV", CommandType.cvar, "90", ""));
			this.Add(new Command("r_JeepViewDampenDamp", CommandType.cvar, "1.0", ""));
			this.Add(new Command("r_JeepViewDampenFreq", CommandType.cvar, "7.0", ""));
			this.Add(new Command("r_JeepViewZHeight", CommandType.cvar, "10.0", ""));
			this.Add(new Command("r_VehicleViewDampen", CommandType.cvar, "1", ""));
			this.Add(new Command("r_drawmodelnames", CommandType.cvar, "0", ""));
			this.Add(new Command("r_vehicleBrakeRate", CommandType.cvar, "1.5", ""));
			this.Add(new Command("radarvisdistance", CommandType.cvar, "1000.0f", "at this distance and beyond you need to be point right at someone to see them"));
			this.Add(new Command("radarvismaxdot", CommandType.cvar, ".996", "how closely you have to point at someone to see them beyond max distance"));
			this.Add(new Command("radarvismethod", CommandType.cvar, "1", "0 for traditional method, 1 for more realistic method"));
			this.Add(new Command("radarvispow", CommandType.cvar, ".4", "the degree to which you can point away from a target, and still see them on radar."));
			this.Add(new Command("replay_death", CommandType.cmd, "", "start hltv replay of last death"));
			this.Add(new Command("replay_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("replay_start", CommandType.cmd, "", "Start GOTV replay: replay_start <delay> [<player name or index>]"));
			this.Add(new Command("replay_stop", CommandType.cmd, "", "stop hltv replay"));
			this.Add(new Command("report_entities", CommandType.cmd, "", "Lists all entities"));
			this.Add(new Command("report_simthinklist", CommandType.cmd, "", "Lists all simulating/thinking entities"));
			this.Add(new Command("report_soundpatch", CommandType.cmd, "", "reports sound patch count"));
			this.Add(new Command("report_touchlinks", CommandType.cmd, "", "Lists all touchlinks"));
			this.Add(new Command("reset_expo", CommandType.cmd, "", "Reset player scores, player controls, team scores, and end the round"));
			this.Add(new Command("respawn_entities", CommandType.cmd, "", "Respawn all the entities in the map."));
			this.Add(new Command("rr_debug_qa", CommandType.cvar, "0", "Set to 1 to see debug related to the Question & Answer system used to create conversations between allied NPCs."));
			this.Add(new Command("rr_debugresponses", CommandType.cvar, "0", "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs."));
			this.Add(new Command("rr_dumpresponses", CommandType.cvar, "0", "Dump all response_rules.txt and rules (requires restart)"));
			this.Add(new Command("rr_followup_maxdist", CommandType.cvar, "1800", "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance."));
			this.Add(new Command("rr_forceconcept", CommandType.cmd, "", "fire a response concept directly at a given character.<br>USAGE: rr_forceconcept <target> <concept> \"criteria1: value1, criteria2: value2,...\"<br>criteria values are optional.<br>"));
			this.Add(new Command("rr_reloadresponsesystems", CommandType.cmd, "", "Reload all response system scripts."));
			this.Add(new Command("rr_remarkable_max_distance", CommandType.cvar, "1200", "AIs will not even consider remarkarbles that are more than this many units away."));
			this.Add(new Command("rr_remarkable_world_entities_replay_limit", CommandType.cvar, "1", "TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable"));
			this.Add(new Command("rr_remarkables_enabled", CommandType.cvar, "1", "If 1, polling for info_remarkables and issuances of TLK_REMARK is enabled."));
			this.Add(new Command("rr_thenany_score_slop", CommandType.cvar, "0.0", "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered."));
			this.Add(new Command("say", CommandType.cmd, "", "Display player message"));
			this.Add(new Command("say_team", CommandType.cmd, "", "Display player message to team"));
			this.Add(new Command("scene_async_prefetch_spew", CommandType.cvar, "0", "Display async .ani file loading info."));
			this.Add(new Command("scene_clamplookat", CommandType.cvar, "1", "Clamp head turns to a MAX of 20 degrees per think."));
			this.Add(new Command("scene_clientflex", CommandType.cvar, "1", "Do client side flex animation."));
			this.Add(new Command("scene_clientplayback", CommandType.cvar, "1", "Play all vcds on the clients."));
			this.Add(new Command("scene_flatturn", CommandType.cvar, "1", ""));
			this.Add(new Command("scene_flush", CommandType.cmd, "", "Flush all .vcds from the cache and reload from disk."));
			this.Add(new Command("scene_forcecombined", CommandType.cvar, "0", "When playing back, force use of combined .wav files even in english."));
			this.Add(new Command("scene_maxcaptionradius", CommandType.cvar, "1200", "Only show closed captions if recipient is within this many units of speaking actor (0==disabled)."));
			this.Add(new Command("scene_playvcd", CommandType.cmd, "", "Play the given VCD as an instanced scripted scene."));
			this.Add(new Command("scene_print", CommandType.cvar, "0", "When playing back a scene, print timing and event info to console."));
			this.Add(new Command("scene_showfaceto", CommandType.cvar, "0", "When playing back, show the directions of faceto events."));
			this.Add(new Command("scene_showlook", CommandType.cvar, "0", "When playing back, show the directions of look events."));
			this.Add(new Command("scene_showmoveto", CommandType.cvar, "0", "When moving, show the end location."));
			this.Add(new Command("scene_showunlock", CommandType.cvar, "0", "Show when a vcd is playing but normal AI is running."));
			this.Add(new Command("score_blind_enemy_bonus", CommandType.cvar, "10", "Bonus for blinding enemy players"));
			this.Add(new Command("score_blind_friendly_penalty", CommandType.cvar, "10", "Penalty for blinding friendly players"));
			this.Add(new Command("score_bomb_defuse_bonus", CommandType.cvar, "400", "Points awarded for defusing or assisting with defuse of bomb"));
			this.Add(new Command("score_bomb_defuse_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for defusing or assisting with defusing the bomb"));
			this.Add(new Command("score_bomb_defuse_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for defusing or assisting with defseing the bomb"));
			this.Add(new Command("score_bomb_plant_bonus", CommandType.cvar, "200", "Points awarded for planting or assisting with planting the bomb"));
			this.Add(new Command("score_bomb_plant_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for planting or assisting with planting the bomb"));
			this.Add(new Command("score_bomb_plant_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for planting or assisting with planting the bomb"));
			this.Add(new Command("score_damage", CommandType.cvar, "1", "Points awarded for each point of damage to an enemy"));
			this.Add(new Command("score_default", CommandType.cvar, "1000", "Default points for a new user"));
			this.Add(new Command("score_dropped_bomb_proximity_damage_bonus", CommandType.cvar, "1", "Points awarded for damaging enemy near dropped bomb"));
			this.Add(new Command("score_dropped_bomb_proximity_damage_bonus_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for doing damage near dropped bomb"));
			this.Add(new Command("score_dropped_bomb_proximity_damage_bonus_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for doing damage near dropped bomb"));
			this.Add(new Command("score_dropped_defuser_proximity_damage_bonus", CommandType.cvar, "1", "Points awarded for damaging enemy near dropped defuser"));
			this.Add(new Command("score_dropped_defuser_proximity_damage_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for doing damage near dropped defuser"));
			this.Add(new Command("score_dropped_defuser_proximity_damage_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for doing damage near dropped defuser"));
			this.Add(new Command("score_ff_damage", CommandType.cvar, "1", "Penalty awarded for each point of damage to a teammate"));
			this.Add(new Command("score_hostage_damage_penalty", CommandType.cvar, "2", "Penalty for damaging a hostage"));
			this.Add(new Command("score_hostage_proximity_damage_bonus", CommandType.cvar, "1", "Points awarded for damaging enemy near live hostage"));
			this.Add(new Command("score_hostage_proximity_damage_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for doing damage near hostage"));
			this.Add(new Command("score_hostage_proximity_damage_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for doing damage near hostage"));
			this.Add(new Command("score_hostage_rescue_bonus", CommandType.cvar, "100", "Points awarded for rescuing a hostage"));
			this.Add(new Command("score_hostage_rescue_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for rescuing hostage"));
			this.Add(new Command("score_hostage_rescue_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for rescuing hostage"));
			this.Add(new Command("score_kill_enemy_bonus", CommandType.cvar, "0", "Points awarded for killing an enemy"));
			this.Add(new Command("score_planted_bomb_proximity_damage_bonus", CommandType.cvar, "1", "Points awarded for damaging enemy near planted bomb"));
			this.Add(new Command("score_planted_bomb_proximity_damage_radius_inner", CommandType.cvar, "120", "Inner radius (full bonus) for doing damage near planted bomb"));
			this.Add(new Command("score_planted_bomb_proximity_damage_radius_outer", CommandType.cvar, "600", "Outer radius (zero bonus) for doing damage near planted bomb"));
			this.Add(new Command("score_team_damage_bonus", CommandType.cvar, "1", "Points awarded for each point of damage a nearby (in same zone) teammate does to enemies"));
			this.Add(new Command("score_typical_good_score", CommandType.cvar, "5", "An average good score for use in funfacts"));
			this.Add(new Command("script", CommandType.cmd, "", "Run the text as a script"));
			this.Add(new Command("script_connect_debugger_on_mapspawn", CommandType.cvar, "0", ""));
			this.Add(new Command("script_debug", CommandType.cmd, "", "Connect the vscript VM to the script debugger"));
			this.Add(new Command("script_dump_all", CommandType.cmd, "", "Dump the state of the VM to the console"));
			this.Add(new Command("script_execute", CommandType.cmd, "", "Run a vscript file"));
			this.Add(new Command("script_help", CommandType.cmd, "", "Output help for script functions, optionally with a search string"));
			this.Add(new Command("script_reload_code", CommandType.cmd, "", "Execute a vscript file, replacing existing functions with the functions in the run script"));
			this.Add(new Command("script_reload_entity_code", CommandType.cmd, "", "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts"));
			this.Add(new Command("script_reload_think", CommandType.cmd, "", "Execute an activation script, replacing existing functions with the functions in the run script"));
			this.Add(new Command("send_round_backup_file_list", CommandType.cmd, "", ""));
			this.Add(new Command("server_game_time", CommandType.cmd, "", "Gives the game time in seconds (server's curtime)"));
			this.Add(new Command("servercfgfile", CommandType.cvar, "server.cfg", ""));
			this.Add(new Command("setang", CommandType.cmd, "", "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats)."));
			this.Add(new Command("setang_exact", CommandType.cmd, "", "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats)."));
			this.Add(new Command("setmodel", CommandType.cmd, "", "Changes's player's model"));
			this.Add(new Command("setpos", CommandType.cmd, "", "Move player to specified origin (must have sv_cheats)."));
			this.Add(new Command("setpos_exact", CommandType.cmd, "", "Move player to an exact specified origin (must have sv_cheats)."));
			this.Add(new Command("setpos_player", CommandType.cmd, "", "Move specified player to specified origin (must have sv_cheats)."));
			this.Add(new Command("shake", CommandType.cmd, "", "Shake the screen."));
			this.Add(new Command("showhitlocation", CommandType.cvar, "0", ""));
			this.Add(new Command("showtriggers", CommandType.cvar, "0", "Shows trigger brushes"));
			this.Add(new Command("showtriggers_toggle", CommandType.cmd, "", "Toggle show triggers"));
			this.Add(new Command("sk_ally_regen_time", CommandType.cvar, "0.3003", "Time taken for an ally to regenerate a point of health."));
			this.Add(new Command("sk_autoaim_mode", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_npc_arm", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_npc_chest", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_npc_head", CommandType.cvar, "2", ""));
			this.Add(new Command("sk_npc_leg", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_npc_stomach", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_player_arm", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_player_chest", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_player_head", CommandType.cvar, "2", ""));
			this.Add(new Command("sk_player_leg", CommandType.cvar, "1", ""));
			this.Add(new Command("sk_player_stomach", CommandType.cvar, "1", ""));
			this.Add(new Command("skip_next_map", CommandType.cmd, "", "Skips the next map in the map rotation for the server."));
			this.Add(new Command("smoothstairs", CommandType.cvar, "1", "Smooth player eye z coordinate when traversing stairs."));
			this.Add(new Command("snd_music_boost", CommandType.cvar, "0", "Specifies an amount to boost music volume by"));
			this.Add(new Command("snd_occlusion_bounces", CommandType.cvar, "1", ""));
			this.Add(new Command("snd_occlusion_rays", CommandType.cvar, "4", ""));
			this.Add(new Command("snd_prevent_ss_duplicates", CommandType.cvar, "0", "switch to en/disable the prevention of splitscreen audio file duplicates<br>"));
			this.Add(new Command("snd_sos_show_server_xmit", CommandType.cvar, "0", ""));
			this.Add(new Command("soundpatch_captionlength", CommandType.cvar, "2.0", "How long looping soundpatch captions should display for."));
			this.Add(new Command("soundscape_debug", CommandType.cvar, "0", "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape."));
			this.Add(new Command("soundscape_flush", CommandType.cmd, "", "Flushes the server & client side soundscapes"));
			this.Add(new Command("spec_allow_roaming", CommandType.cvar, "0", "If nonzero, allow free-roaming spectator camera."));
			this.Add(new Command("spec_freeze_deathanim_time", CommandType.cvar, "0.8", "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam."));
			this.Add(new Command("spec_freeze_panel_extended_time", CommandType.cvar, "0.0", "Time spent with the freeze panel still up after observer freeze cam is done."));
			this.Add(new Command("spec_freeze_target_fov", CommandType.cvar, "42", "The target FOV that the deathcam should use."));
			this.Add(new Command("spec_freeze_target_fov_long", CommandType.cvar, "90", "The target FOV that the deathcam should use when the cam zoom far away on the target."));
			this.Add(new Command("spec_freeze_time", CommandType.cvar, "3.0", "Time spend frozen in observer freeze cam."));
			this.Add(new Command("spec_freeze_time_lock", CommandType.cvar, "1.0", "Time players are prevented from skipping the freeze cam"));
			this.Add(new Command("spec_freeze_traveltime", CommandType.cvar, "0.3", "Time taken to zoom in to frame a target in observer freeze cam."));
			this.Add(new Command("spec_freeze_traveltime_long", CommandType.cvar, "0.45", "Time taken to zoom in to frame a target in observer freeze cam when they are far away."));
			this.Add(new Command("spec_replay_bot", CommandType.cvar, "0", "Enable Spectator Hltv Replay when killed by bot"));
			this.Add(new Command("spec_replay_cam_delay", CommandType.cvar, "5", "Hltv Replay delay in seconds"));
			this.Add(new Command("spec_replay_cam_options", CommandType.cvar, "0", "Debug options for replay cam"));
			this.Add(new Command("spec_replay_enable", CommandType.cvar, "0", "Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force)"));
			this.Add(new Command("spec_replay_leadup_time", CommandType.cvar, "5.3438", "Replay time in seconds before the highlighted event"));
			this.Add(new Command("spec_replay_message_time", CommandType.cvar, "9.5", "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time"));
			this.Add(new Command("spec_replay_on_death", CommandType.cvar, "0", "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players"));
			this.Add(new Command("spec_replay_rate_base", CommandType.cvar, "1", "Base time scale of Killer Replay.Experimental."));
			this.Add(new Command("spec_replay_rate_limit", CommandType.cvar, "3", "Minimum allowable pause between replay requests in seconds"));
			this.Add(new Command("spec_replay_round_delay", CommandType.cvar, "0", "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)"));
			this.Add(new Command("spec_replay_winddown_time", CommandType.cvar, "2", "The trailing time, in seconds, of replay past the event, including fade-out"));
			this.Add(new Command("steamworks_sessionid_server", CommandType.cvar, "0", "The server session ID for the new steamworks gamestats."));
			this.Add(new Command("step_spline", CommandType.cvar, "0", ""));
			this.Add(new Command("suitvolume", CommandType.cvar, "0.25", ""));
			this.Add(new Command("surfaceprop", CommandType.cmd, "", "Reports the surface properties at the cursor"));
			this.Add(new Command("survival_check_num_possible_final_zone", CommandType.cmd, "", "print out a number of all possible final zone"));
			this.Add(new Command("sv_accelerate", CommandType.cvar, "5.5", "Linear acceleration amount (old value is 5.6)"));
			this.Add(new Command("sv_accelerate_debug_speed", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_accelerate_use_weapon_speed", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_air_max_horizontal_parachute_ratio", CommandType.cvar, "0.87", ""));
			this.Add(new Command("sv_air_max_horizontal_parachute_speed", CommandType.cvar, "240", ""));
			this.Add(new Command("sv_air_max_wishspeed", CommandType.cvar, "30", ""));
			this.Add(new Command("sv_air_pushaway_dist", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_airaccelerate", CommandType.cvar, "12", ""));
			this.Add(new Command("sv_airaccelerate_parachute", CommandType.cvar, "2.6", ""));
			this.Add(new Command("sv_airaccelerate_rappel", CommandType.cvar, "2.2", ""));
			this.Add(new Command("sv_allchat", CommandType.cvar, "1", "Players can receive all other players' text chat, team restrictions apply"));
			this.Add(new Command("sv_allow_thirdperson", CommandType.cvar, "0", "Allows the server set players in third person mode without the client slamming it back (if cheats are on, all clients can set thirdperson without this convar being set)"));
			this.Add(new Command("sv_allow_votes", CommandType.cvar, "1", "Allow voting?"));
			this.Add(new Command("sv_allow_wait_command", CommandType.cvar, "1", "Allow or disallow the wait command on clients connected to this server."));
			this.Add(new Command("sv_alltalk", CommandType.cvar, "0", "Deprecated. Replaced with sv_talk_enemy_dead and sv_talk_enemy_living."));
			this.Add(new Command("sv_arms_race_vote_to_restart_disallowed_after", CommandType.cvar, "0", "Arms Race gun level after which vote to restart is disallowed"));
			this.Add(new Command("sv_assassination_target_ratio", CommandType.cvar, "5", ""));
			this.Add(new Command("sv_auto_adjust_bot_difficulty", CommandType.cvar, "1", "Adjust the difficulty of bots each round based on contribution score."));
			this.Add(new Command("sv_auto_full_alltalk_during_warmup_half_end", CommandType.cvar, "1", "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match"));
			this.Add(new Command("sv_autobunnyhopping", CommandType.cvar, "0", "Players automatically re-jump while holding jump button"));
			this.Add(new Command("sv_autobuyammo", CommandType.cvar, "0", "Enable automatic ammo purchase when inside buy zones during buy periods"));
			this.Add(new Command("sv_autoexec_mapname_cfg", CommandType.cvar, "0", "Execute a mapname cfg file on the server automatically in custom game modes that require it."));
			this.Add(new Command("sv_backspeed", CommandType.cvar, "0.6", "How much to slow down backwards motion"));
			this.Add(new Command("sv_benchmark_autovprofrecord", CommandType.cvar, "0", "If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof."));
			this.Add(new Command("sv_benchmark_force_start", CommandType.cmd, "", "Force start the benchmark. This is only for debugging. It's better to set sv_benchmark to 1 and restart the level."));
			this.Add(new Command("sv_benchmark_numticks", CommandType.cvar, "3300", "If > 0, then it only runs the benchmark for this # of ticks."));
			this.Add(new Command("sv_bonus_challenge", CommandType.cvar, "0", "Set to values other than 0 to select a bonus map challenge type."));
			this.Add(new Command("sv_bot_buy_decoy_weight", CommandType.cvar, "1", "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."));
			this.Add(new Command("sv_bot_buy_flash_weight", CommandType.cvar, "1", "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."));
			this.Add(new Command("sv_bot_buy_grenade_chance", CommandType.cvar, "33", "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)"));
			this.Add(new Command("sv_bot_buy_hegrenade_weight", CommandType.cvar, "6", "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."));
			this.Add(new Command("sv_bot_buy_molotov_weight", CommandType.cvar, "1", "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."));
			this.Add(new Command("sv_bot_buy_smoke_weight", CommandType.cvar, "1", "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."));
			this.Add(new Command("sv_bot_difficulty_gamepad", CommandType.cvar, "0", "Bot difficulty while playing with Gamepad device"));
			this.Add(new Command("sv_bot_difficulty_hydra", CommandType.cvar, "0", "Bot difficulty while playing with Hydra device"));
			this.Add(new Command("sv_bot_difficulty_kbm", CommandType.cvar, "0", "Bot difficulty while playing with Keyboard/Mouse device"));
			this.Add(new Command("sv_bot_difficulty_ps3move", CommandType.cvar, "0", "Bot difficulty while playing with PS3Move device"));
			this.Add(new Command("sv_bot_difficulty_sharpshooter", CommandType.cvar, "0", "Bot difficulty while playing with SharpShooter device"));
			this.Add(new Command("sv_bots_force_rebuy_every_round", CommandType.cvar, "0", "If set, this strips the bots of their weapons every round and forces them to rebuy."));
			this.Add(new Command("sv_bots_get_easier_each_win", CommandType.cvar, "0", "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time."));
			this.Add(new Command("sv_bots_get_harder_after_each_wave", CommandType.cvar, "0", "If > 0, some # of bots will raise thier difficulty each time CTs beat a Guardian wave. The argument defines how many will raise their difficulty each time"));
			this.Add(new Command("sv_bounce", CommandType.cvar, "0", "Bounce multiplier for when physically simulated objects collide with other objects."));
			this.Add(new Command("sv_breachcharge_arm_delay", CommandType.cvar, "0.3", ""));
			this.Add(new Command("sv_breachcharge_delay_max", CommandType.cvar, "0.8", ""));
			this.Add(new Command("sv_breachcharge_delay_min", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_breachcharge_distance_max", CommandType.cvar, "1200", ""));
			this.Add(new Command("sv_breachcharge_distance_min", CommandType.cvar, "600", ""));
			this.Add(new Command("sv_breachcharge_fuse_max", CommandType.cvar, "1.0", ""));
			this.Add(new Command("sv_breachcharge_fuse_min", CommandType.cvar, "0.7", ""));
			this.Add(new Command("sv_broadcast_ugc_download_progress_interval", CommandType.cvar, "8", ""));
			this.Add(new Command("sv_broadcast_ugc_downloads", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_bumpmine_arm_delay", CommandType.cvar, "0.3", ""));
			this.Add(new Command("sv_bumpmine_detonate_delay", CommandType.cvar, "0.25", ""));
			this.Add(new Command("sv_buy_status_override", CommandType.cvar, "-1", "Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody"));
			this.Add(new Command("sv_chat_proximity", CommandType.cvar, "-1", ""));
			this.Add(new Command("sv_cheats", CommandType.cvar, "0", "Allow cheats on server"));
			this.Add(new Command("sv_clamp_unsafe_velocities", CommandType.cvar, "1", "Whether the server will attempt to clamp velocities that could cause physics bugs or crashes."));
			this.Add(new Command("sv_clearhinthistory", CommandType.cmd, "", "Clear memory of server side hints displayed to the player."));
			this.Add(new Command("sv_client_cmdrate_difference", CommandType.cvar, "0", "cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate."));
			this.Add(new Command("sv_client_max_interp_ratio", CommandType.cvar, "5", "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect."));
			this.Add(new Command("sv_client_min_interp_ratio", CommandType.cvar, "1", "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).<br>              -1 = let clients set cl_interp_ratio to anything<br> any other value = set minimum value for cl_interp_ratio"));
			this.Add(new Command("sv_client_predict", CommandType.cvar, "-1", "This can be used to force the value of cl_predict for connected clients (only while they are connected).<br>   -1 = let clients set cl_predict to anything<br>    0 = force cl_predict to 0<br>    1 = force cl_predict to 1"));
			this.Add(new Command("sv_clip_penetration_traces_to_players", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_clockcorrection_msecs", CommandType.cvar, "30", "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount"));
			this.Add(new Command("sv_coach_comm_unrestricted", CommandType.cvar, "0", "When set, ignores coach communication restrictions."));
			this.Add(new Command("sv_coaching_enabled", CommandType.cvar, "0", "Allows spectating and communicating with a team ( 'coach t' or 'coach ct' )"));
			this.Add(new Command("sv_comp_mode_allow_dc", CommandType.cvar, "0", "Set this to 1 to allow direct connects in Competitive mode"));
			this.Add(new Command("sv_competitive_minspec", CommandType.cvar, "1", "Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages."));
			this.Add(new Command("sv_competitive_official_5v5", CommandType.cvar, "0", "Enable to force the server to show 5v5 scoreboards and allows spectators to see characters through walls."));
			this.Add(new Command("sv_compute_per_bot_difficulty", CommandType.cvar, "0", "0 = compute all bot difficulties equally, 1 = compute unique bot difficulty for each bot "));
			this.Add(new Command("sv_consistency", CommandType.cvar, "0", "Whether the server enforces file consistency for critical files"));
			this.Add(new Command("sv_cs_dump_econ_item_stringtable", CommandType.cmd, "", "sv_cs_dump_econ_item_stringtable"));
			this.Add(new Command("sv_cs_player_speed_has_hostage", CommandType.cvar, "200", ""));
			this.Add(new Command("sv_ct_spawn_on_bombsite", CommandType.cvar, "-1", "Force cts to spawn on a bombsite"));
			this.Add(new Command("sv_damage_print_enable", CommandType.cvar, "1", "Turn this off to disable the player's damage feed in the console after getting killed."));
			this.Add(new Command("sv_dc_friends_reqd", CommandType.cvar, "0", "Set this to 0 to allow direct connects to a game in progress even if no presents are present"));
			this.Add(new Command("sv_deadtalk", CommandType.cvar, "0", "Dead players can speak (voice, text) to the living"));
			this.Add(new Command("sv_debug_player_use", CommandType.cvar, "0", "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success"));
			this.Add(new Command("sv_debug_ugc_downloads", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_debugroundstats", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_disable_immunity_alpha", CommandType.cvar, "0", "If set, clients won't slam the player model render settings each frame for immunity [mod authors use this]"));
			this.Add(new Command("sv_disable_motd", CommandType.cvar, "1", "Prevent the motd from showing."));
			this.Add(new Command("sv_disable_observer_interpolation", CommandType.cvar, "0", "Disallow interpolating between observer targets on this server."));
			this.Add(new Command("sv_disable_pas", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_disable_querycache", CommandType.cvar, "0", "debug - disable trace query cache"));
			this.Add(new Command("sv_disable_radar", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_disablefreezecam", CommandType.cvar, "0", "Turn on/off freezecam on server"));
			this.Add(new Command("sv_drowning_damage_initial", CommandType.cvar, "2", ""));
			this.Add(new Command("sv_drowning_damage_max", CommandType.cvar, "5", ""));
			this.Add(new Command("sv_duplicate_playernames_ok", CommandType.cvar, "0", "When enabled player names won't have the (#) in front of their names its the same as another player."));
			this.Add(new Command("sv_dz_autojointeam", CommandType.cvar, "1", "Whether players are automatically assigned a DZ team"));
			this.Add(new Command("sv_dz_cash_bundle_size", CommandType.cvar, "50", "Size of a cash bundle"));
			this.Add(new Command("sv_dz_cash_mega_bundle_size", CommandType.cvar, "13", "Size of a mega cash bundle"));
			this.Add(new Command("sv_dz_contractkill_reward", CommandType.cvar, "10", "Cash bundles to award for a successful contract kill"));
			this.Add(new Command("sv_dz_enable_respawn", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_dz_enable_respawn_solos", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_dz_exploration_payment_amount", CommandType.cvar, "2", "Number of cash bundles to award for exploring a new sector"));
			this.Add(new Command("sv_dz_exploration_payment_amount_bonus", CommandType.cvar, "2", "Number of BONUS cash bundles to award for exploring (if the player has the item/upgrade)"));
			this.Add(new Command("sv_dz_hostage_rescue_reward", CommandType.cvar, "18", "Number of cash bundles to award for rescuing a hostage"));
			this.Add(new Command("sv_dz_jointeam_allowed", CommandType.cvar, "0", "Whether non-server admins are allowed to use the dz_jointeam command"));
			this.Add(new Command("sv_dz_last_respawn_warning", CommandType.cvar, "15", ""));
			this.Add(new Command("sv_dz_last_respawn_wave", CommandType.cvar, "3", "Missile wave number to prevent respawns, >5 will allow respawns on all waves"));
			this.Add(new Command("sv_dz_parachute_reuse", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_dz_paradrop", CommandType.cmd, "", ""));
			this.Add(new Command("sv_dz_player_max_health", CommandType.cvar, "120", ""));
			this.Add(new Command("sv_dz_player_spawn_armor", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_dz_player_spawn_health", CommandType.cvar, "120", ""));
			this.Add(new Command("sv_dz_reset_danger_zone", CommandType.cmd, "", ""));
			this.Add(new Command("sv_dz_respawn_additional_wait_time_solo", CommandType.cvar, "15", ""));
			this.Add(new Command("sv_dz_respawn_pick_time", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_dz_respawn_wait_time_per_death", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_dz_show_enemy_name_scope_range", CommandType.cvar, "800", ""));
			this.Add(new Command("sv_dz_show_security_door_item_price", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_dz_show_weapon_spawns", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_dz_squad_wipe_reward", CommandType.cvar, "2", "Number of cash bundles to award for eliminating a squad"));
			this.Add(new Command("sv_dz_team_count", CommandType.cvar, "1", "Max players allowed per team"));
			this.Add(new Command("sv_dz_warmup_tablet", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_dz_zone_bombdrop_money_reward", CommandType.cvar, "15", "How many money stacks players are rewarded each danger zone wave"));
			this.Add(new Command("sv_dz_zone_bombdrop_money_reward_bonus", CommandType.cvar, "5", "How many bonus money stacks players are rewarded each danger zone wave when they have the bonus item"));
			this.Add(new Command("sv_dz_zone_damage", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_dz_zone_hex_radius", CommandType.cvar, "2200", ""));
			this.Add(new Command("sv_enablebunnyhopping", CommandType.cvar, "0", "Allow player speed to exceed maximum running speed"));
			this.Add(new Command("sv_endmatch_item_drop_interval", CommandType.cvar, "1.0", "The time between drops on the end match scoreboard "));
			this.Add(new Command("sv_endmatch_item_drop_interval_ancient", CommandType.cvar, "3.5", "The time between drops on the end match scoreboard for ancient items "));
			this.Add(new Command("sv_endmatch_item_drop_interval_legendary", CommandType.cvar, "2.0", "The time between drops on the end match scoreboard for legendary items "));
			this.Add(new Command("sv_endmatch_item_drop_interval_mythical", CommandType.cvar, "1.25", "The time between drops on the end match scoreboard for mythical items "));
			this.Add(new Command("sv_endmatch_item_drop_interval_rare", CommandType.cvar, "1.0", "The time between drops on the end match scoreboard for rare items "));
			this.Add(new Command("sv_env_entity_makers_enabled", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_exojump_jumpbonus_forward", CommandType.cvar, "0.4", "ExoJump forwards velocity bonus when duck jumping"));
			this.Add(new Command("sv_exojump_jumpbonus_up", CommandType.cvar, "0.58", "ExoJump upwards bonus when holding the jump button"));
			this.Add(new Command("sv_exojump_soundramp", CommandType.cvar, "20.0", ""));
			this.Add(new Command("sv_exostaminajumpcost", CommandType.cvar, ".040", "Stamina penalty for jumping with exo legs"));
			this.Add(new Command("sv_exostaminalandcost", CommandType.cvar, ".015", "Stamina penalty for landing with exo legs"));
			this.Add(new Command("sv_extract_ammo_from_dropped_weapons", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_extreme_strafe_accuracy_fishtail", CommandType.cvar, "0", "Number of degrees of aim 'fishtail' when making an extreme strafe direction change"));
			this.Add(new Command("sv_falldamage_exojump_multiplier", CommandType.cvar, "0.4", "ExoJump fall damage multiplier"));
			this.Add(new Command("sv_falldamage_scale", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_falldamage_to_below_player_multiplier", CommandType.cvar, "1", "Scale damage when distributed across two players"));
			this.Add(new Command("sv_falldamage_to_below_player_ratio", CommandType.cvar, "0", "Landing on a another player's head gives them this ratio of the damage."));
			this.Add(new Command("sv_findsoundname", CommandType.cmd, "", "Find sound names which reference the specified wave files."));
			this.Add(new Command("sv_fistpoint_delay", CommandType.cvar, "1.8", ""));
			this.Add(new Command("sv_fistpunch_blocked_damage", CommandType.cvar, "25", ""));
			this.Add(new Command("sv_fistpunch_damage", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_fistpunch_damage_hard", CommandType.cvar, "20", ""));
			this.Add(new Command("sv_fistpunch_damage_to_player_multiplier", CommandType.cvar, "1.5", ""));
			this.Add(new Command("sv_fistpunch_impact_sounds", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_fistpunch_viewmove", CommandType.cvar, "40", ""));
			this.Add(new Command("sv_flashbang_strength", CommandType.cvar, "3.55", "Flashbang strength"));
			this.Add(new Command("sv_footstep_sound_frequency", CommandType.cvar, "0.97", "How frequent to hear the player's step sound or how fast they appear to be running from first person."));
			this.Add(new Command("sv_footsteps", CommandType.cvar, "1", "Play footstep sound for players"));
			this.Add(new Command("sv_force_reflections", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_force_transmit_ents", CommandType.cvar, "0", "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however)."));
			this.Add(new Command("sv_force_transmit_players", CommandType.cvar, "0", "Will transmit players to all clients regardless of PVS checks."));
			this.Add(new Command("sv_friction", CommandType.cvar, "5.2", "World friction."));
			this.Add(new Command("sv_full_alltalk", CommandType.cvar, "0", "Any player (including Spectator team) can speak to any other player"));
			this.Add(new Command("sv_game_mode_convars", CommandType.cmd, "", "Display the values of the convars for the current game_mode."));
			this.Add(new Command("sv_gameinstructor_disable", CommandType.cvar, "0", "Force all clients to disable their game instructors."));
			this.Add(new Command("sv_grassburn", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_gravity", CommandType.cvar, "800", "World gravity."));
			this.Add(new Command("sv_grenade_trajectory", CommandType.cvar, "0", "Shows grenade trajectory visualization in-game."));
			this.Add(new Command("sv_grenade_trajectory_dash", CommandType.cvar, "0", "Dot-dash style grenade trajectory arc"));
			this.Add(new Command("sv_grenade_trajectory_thickness", CommandType.cvar, "0.2", "Visible thickness of grenade trajectory arc"));
			this.Add(new Command("sv_grenade_trajectory_time", CommandType.cvar, "20", "Length of time grenade trajectory remains visible."));
			this.Add(new Command("sv_grenade_trajectory_time_spectator", CommandType.cvar, "4", "Length of time grenade trajectory remains visible as a spectator."));
			this.Add(new Command("sv_guardian_health_refresh_per_wave", CommandType.cvar, "50", "Health given to survivors per wave in guardian mode."));
			this.Add(new Command("sv_guardian_heavy_all", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_guardian_heavy_count", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_guardian_max_wave_for_heavy", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_guardian_min_wave_for_heavy", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_guardian_reset_c4_every_wave", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_guardian_respawn_health", CommandType.cvar, "50", "Starting health of guardian players when respawned."));
			this.Add(new Command("sv_guardian_spawn_health_ct", CommandType.cvar, "100", "Starting health in guardian modes."));
			this.Add(new Command("sv_guardian_spawn_health_t", CommandType.cvar, "100", "Starting health in guardian modes."));
			this.Add(new Command("sv_health_approach_enabled", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_health_approach_speed", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_hegrenade_damage_multiplier", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_hegrenade_radius_multiplier", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_highlight_distance", CommandType.cvar, "500", ""));
			this.Add(new Command("sv_highlight_duration", CommandType.cvar, "3.5", ""));
			this.Add(new Command("sv_holiday_mode", CommandType.cvar, "0", "0 = OFF, 1 = Halloween, 2 = Winter"));
			this.Add(new Command("sv_hosting_lobby", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_hudhint_sound", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_ignoregrenaderadio", CommandType.cvar, "0", "Turn off Fire in the hole messages"));
			this.Add(new Command("sv_infinite_ammo", CommandType.cvar, "0", "Player's active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the magazine."));
			this.Add(new Command("sv_invites_only_mainmenu", CommandType.cvar, "0", "If turned on, will ignore all invites when user is playing a match"));
			this.Add(new Command("sv_jump_impulse", CommandType.cvar, "301.993377", "Initial upward velocity for player jumps; sqrt(2*gravity*height)."));
			this.Add(new Command("sv_jump_impulse_exojump_multiplier", CommandType.cvar, "1.05", "ExoJump impulse multiplier"));
			this.Add(new Command("sv_kick_ban_duration", CommandType.cvar, "15", "How long should a kick ban from the server should last (in minutes)"));
			this.Add(new Command("sv_kick_players_with_cooldown", CommandType.cvar, "1", "(0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)"));
			this.Add(new Command("sv_knife_attack_extend_from_player_aabb", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_ladder_angle", CommandType.cvar, "-0.707", "Cos of angle of incidence to ladder perpendicular for applying ladder_dampen"));
			this.Add(new Command("sv_ladder_dampen", CommandType.cvar, "0.2", "Amount to dampen perpendicular movement on a ladder"));
			this.Add(new Command("sv_ladder_scale_speed", CommandType.cvar, "0.78", "Scale top speed on ladders"));
			this.Add(new Command("sv_lagcompensateself", CommandType.cvar, "0", "Player can lag compensate themselves."));
			this.Add(new Command("sv_lagcompensationforcerestore", CommandType.cvar, "1", "Don't test validity of a lag comp restore, just do it."));
			this.Add(new Command("sv_lagflushbonecache", CommandType.cvar, "1", "Flushes entity bone cache on lag compensation"));
			this.Add(new Command("sv_lagpushticks", CommandType.cvar, "0", "Push computed lag compensation amount by this many ticks."));
			this.Add(new Command("sv_ledge_mantle_helper", CommandType.cvar, "1", "1=Only improves success of jump+ducks to windows or vents (jump+duck to duck), 2=Improves success of all jump+ducks to ledges, 3=if you can get your eyes above it, you'll pull yourself up"));
			this.Add(new Command("sv_ledge_mantle_helper_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_ledge_mantle_helper_dzonly", CommandType.cvar, "0", "1=only does the feature if running in game mode Danger Zone, 0=Doesn't check game mode to run"));
			this.Add(new Command("sv_load_forced_client_names_file", CommandType.cmd, "", "Loads a file containing SteamID64 names for clients"));
			this.Add(new Command("sv_load_random_client_names_file", CommandType.cmd, "", "Loads a file containing random name words for clients"));
			this.Add(new Command("sv_massreport", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_matchend_drops_enabled", CommandType.cvar, "1", "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented"));
			this.Add(new Command("sv_matchpause_auto_5v5", CommandType.cvar, "0", "When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team."));
			this.Add(new Command("sv_max_allowed_net_graph", CommandType.cvar, "1", "Determines max allowed net_graph value for clients."));
			this.Add(new Command("sv_max_distance_transmit_footsteps", CommandType.cvar, "1250.0", "Maximum distance to transmit footstep sound effects."));
			this.Add(new Command("sv_max_usercmd_future_ticks", CommandType.cvar, "8", "Prevents clients from running usercmds too far in the future. Prevents speed hacks."));
			this.Add(new Command("sv_max_usercmd_move_magnitude", CommandType.cvar, "1000", "Maximum move magnitude that can be requested by client."));
			this.Add(new Command("sv_maxcmdrate", CommandType.cvar, "64", "(If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate."));
			this.Add(new Command("sv_maxrate", CommandType.cvar, "0", "Max bandwidth rate allowed on server, 0 == unlimited"));
			this.Add(new Command("sv_maxspeed", CommandType.cvar, "320", ""));
			this.Add(new Command("sv_maxunlag", CommandType.cvar, "0.200", "Maximum lag compensation in seconds"));
			this.Add(new Command("sv_maxupdaterate", CommandType.cvar, "64", "Maximum updates per second that the server will allow"));
			this.Add(new Command("sv_maxusrcmdprocessticks", CommandType.cvar, "16", "Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions"));
			this.Add(new Command("sv_maxusrcmdprocessticks_holdaim", CommandType.cvar, "1", "Hold client aim for multiple server sim ticks when client-issued usrcmd contains multiple actions (0: off; 1: hold this server tick; 2+: hold multiple ticks)"));
			this.Add(new Command("sv_maxusrcmdprocessticks_warning", CommandType.cvar, "-1", "Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled"));
			this.Add(new Command("sv_maxvelocity", CommandType.cvar, "3500", "Maximum speed any ballistically moving object is allowed to attain per axis."));
			this.Add(new Command("sv_min_jump_landing_sound", CommandType.cvar, "260.0", ""));
			this.Add(new Command("sv_mincmdrate", CommandType.cvar, "64", "This sets the minimum value for cl_cmdrate. 0 == unlimited."));
			this.Add(new Command("sv_minrate", CommandType.cvar, "16000", "Min bandwidth rate allowed on server, 0 == unlimited"));
			this.Add(new Command("sv_minupdaterate", CommandType.cvar, "64", "Minimum updates per second that the server will allow"));
			this.Add(new Command("sv_mumble_positionalaudio", CommandType.cvar, "1", "Allows players using Mumble to have support for positional audio."));
			this.Add(new Command("sv_mute_players_with_social_penalties", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_netvisdist", CommandType.cvar, "10000", "Test networking visibility distance"));
			this.Add(new Command("sv_noclipaccelerate", CommandType.cvar, "5", ""));
			this.Add(new Command("sv_noclipduringpause", CommandType.cvar, "0", "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.)."));
			this.Add(new Command("sv_noclipspeed", CommandType.cvar, "5", ""));
			this.Add(new Command("sv_nomvp", CommandType.cvar, "0", "Disable MVP awards."));
			this.Add(new Command("sv_nonemesis", CommandType.cvar, "0", "Disable nemesis and revenge."));
			this.Add(new Command("sv_nowinpanel", CommandType.cvar, "0", "Turn on/off win panel on server"));
			this.Add(new Command("sv_npc_talker_maxdist", CommandType.cvar, "1024", "NPCs over this distance from the player won't attempt to speak."));
			this.Add(new Command("sv_occlude_players", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_optimizedmovement", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_outofammo_indicator", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_party_mode", CommandType.cvar, "0", "Party!!"));
			this.Add(new Command("sv_penetration_type", CommandType.cvar, "1", "What type of penertration to use. 0 = old CS, 1 = new penetration"));
			this.Add(new Command("sv_phys_props_block_movers", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_player_parachute_velocity", CommandType.cvar, "-200", ""));
			this.Add(new Command("sv_playerperfhistorycount", CommandType.cvar, "20", "Number of samples to maintain in player perf history"));
			this.Add(new Command("sv_prime_accounts_only", CommandType.cvar, "0", "When this setting is enabled only prime users can connect to this game server."));
			this.Add(new Command("sv_prop_door_open_speed_scale", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_pushaway_clientside", CommandType.cvar, "0", "Clientside physics push away (0=off, 1=only localplayer, 1=all players)"));
			this.Add(new Command("sv_pushaway_clientside_size", CommandType.cvar, "15", "Minimum size of pushback objects"));
			this.Add(new Command("sv_pushaway_force", CommandType.cvar, "30000", "How hard physics objects are pushed away from the players on the server."));
			this.Add(new Command("sv_pushaway_hostage_force", CommandType.cvar, "20000", "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance)."));
			this.Add(new Command("sv_pushaway_max_force", CommandType.cvar, "1000", "Maximum amount of force applied to physics objects by players."));
			this.Add(new Command("sv_pushaway_max_hostage_force", CommandType.cvar, "1000", "Maximum of how hard the hostage is pushed away from physics objects."));
			this.Add(new Command("sv_pushaway_max_player_force", CommandType.cvar, "10000", "Maximum of how hard the player is pushed away from physics objects."));
			this.Add(new Command("sv_pushaway_min_player_speed", CommandType.cvar, "75", "If a player is moving slower than this, don't push away physics objects (enables ducking behind things)."));
			this.Add(new Command("sv_pushaway_player_force", CommandType.cvar, "200000", "How hard the player is pushed away from physics objects (falls off with inverse square of distance)."));
			this.Add(new Command("sv_pvsskipanimation", CommandType.cvar, "1", "Skips SetupBones when npc's are outside the PVS"));
			this.Add(new Command("sv_querycache_stats", CommandType.cmd, "", "Display status of the query cache (client only)"));
			this.Add(new Command("sv_record_item_time_data", CommandType.cvar, "0", "Turn on recording of per player item time data into the server log."));
			this.Add(new Command("sv_regeneration_force_on", CommandType.cvar, "0", "Cheat to test regenerative health systems"));
			this.Add(new Command("sv_regeneration_wait_time", CommandType.cvar, "1.0", ""));
			this.Add(new Command("sv_reliableavatardata", CommandType.cvar, "0", "When enabled player avatars are exchanged via gameserver (0: off, 1: players, 2: server)"));
			this.Add(new Command("sv_remove_old_ugc_downloads", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_rethrow_last_grenade", CommandType.cmd, "", "Emit the last grenade thrown on the server."));
			this.Add(new Command("sv_reward_drop_delay", CommandType.cvar, "3.0", "Delay between the end match scoreboard being shown and the beginning of item drops."));
			this.Add(new Command("sv_rollangle", CommandType.cvar, "0", "Max view roll angle"));
			this.Add(new Command("sv_rollspeed", CommandType.cvar, "200", ""));
			this.Add(new Command("sv_runcmds", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_script_think_interval", CommandType.cvar, "0.1", ""));
			this.Add(new Command("sv_server_verify_blood_on_player", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_shield_explosive_damage_cap", CommandType.cvar, "99", ""));
			this.Add(new Command("sv_shield_explosive_damage_crouch_bonus", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_shield_explosive_damage_mindist", CommandType.cvar, "250", ""));
			this.Add(new Command("sv_shield_explosive_damage_mult", CommandType.cvar, "4", ""));
			this.Add(new Command("sv_shield_explosive_damage_scale", CommandType.cvar, "0.5", ""));
			this.Add(new Command("sv_shield_hitpoints", CommandType.cvar, "650", ""));
			this.Add(new Command("sv_show_bot_difficulty_in_name", CommandType.cvar, "0", "0 = hide bot difficulty in bot name, 1 = show bot difficulty in bot name"));
			this.Add(new Command("sv_show_ragdoll_playernames", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_show_team_equipment_force_on", CommandType.cvar, "0", "Force on if not prohibited"));
			this.Add(new Command("sv_show_team_equipment_prohibit", CommandType.cvar, "0", "Determines whether +cl_show_team_equipment is prohibited."));
			this.Add(new Command("sv_show_voip_indicator_for_enemies", CommandType.cvar, "0", "Makes it so the voip icon is shown over enemies as well as allies when they are talking"));
			this.Add(new Command("sv_showanimstate", CommandType.cvar, "-1", "Show the (server) animation state for the specified entity (-1 for none)."));
			this.Add(new Command("sv_showanimstate_activities", CommandType.cvar, "0", "Show activities in the (server) animation state display."));
			this.Add(new Command("sv_showanimstate_log", CommandType.cvar, "0", "1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both."));
			this.Add(new Command("sv_showbullethits", CommandType.cvar, "0", "1=show hits and near misses, 2=show hits only"));
			this.Add(new Command("sv_showimpacts", CommandType.cvar, "0", "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)"));
			this.Add(new Command("sv_showimpacts_penetration", CommandType.cvar, "0", "Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)"));
			this.Add(new Command("sv_showimpacts_time", CommandType.cvar, "4", "Duration bullet impact indicators remain before disappearing"));
			this.Add(new Command("sv_showladders", CommandType.cvar, "0", "Show bbox and dismount points for all ladders (must be set before level load.)<br>"));
			this.Add(new Command("sv_showlagcompensation", CommandType.cvar, "0", "Show lag compensated hitboxes whenever a player is lag compensated."));
			this.Add(new Command("sv_showlagcompensation_duration", CommandType.cvar, "4.0", "Duration to show lag-compensated hitboxes"));
			this.Add(new Command("sv_showplayerhitboxes", CommandType.cvar, "0", "Show lag compensated hitboxes for the specified player index whenever a player fires."));
			this.Add(new Command("sv_skirmish_id", CommandType.cvar, "0", "Dedicated server skirmish id to run"));
			this.Add(new Command("sv_skyname", CommandType.cvar, "sky_urb01", "Current name of the skybox texture"));
			this.Add(new Command("sv_snowball_strength", CommandType.cvar, "12.0", "Snowball strength"));
			this.Add(new Command("sv_soundemitter_filecheck", CommandType.cmd, "", "Report missing wave files for sounds and game_sounds files."));
			this.Add(new Command("sv_soundemitter_flush", CommandType.cmd, "", "Flushes the sounds.txt system (server only)"));
			this.Add(new Command("sv_soundemitter_reload", CommandType.cmd, "", "Flushes the sounds.txt system"));
			this.Add(new Command("sv_soundemitter_spew", CommandType.cmd, "", "Print details about a sound."));
			this.Add(new Command("sv_soundemitter_trace", CommandType.cvar, "-1", "Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)<br>"));
			this.Add(new Command("sv_soundemitter_version", CommandType.cvar, "2", "specfies what version of soundemitter system to use<br>"));
			this.Add(new Command("sv_soundscape_printdebuginfo", CommandType.cmd, "", "print soundscapes"));
			this.Add(new Command("sv_spawn_afk_bomb_drop_time", CommandType.cvar, "15", "Players that have never moved since they spawned will drop the bomb after this amount of time."));
			this.Add(new Command("sv_spawn_rappel_min_duration", CommandType.cvar, "8.0", ""));
			this.Add(new Command("sv_spawn_rappel_min_duration_with_chute", CommandType.cvar, "2.5", ""));
			this.Add(new Command("sv_spec_hear", CommandType.cvar, "1", "Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody"));
			this.Add(new Command("sv_spec_post_death_additional_time", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_spec_use_tournament_content_standards", CommandType.cvar, "0.0", ""));
			this.Add(new Command("sv_specaccelerate", CommandType.cvar, "5", ""));
			this.Add(new Command("sv_specnoclip", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_specspeed", CommandType.cvar, "3", ""));
			this.Add(new Command("sv_staminajumpcost", CommandType.cvar, ".080", "Stamina penalty for jumping"));
			this.Add(new Command("sv_staminalandcost", CommandType.cvar, ".050", "Stamina penalty for landing"));
			this.Add(new Command("sv_staminamax", CommandType.cvar, "80", "Maximum stamina penalty"));
			this.Add(new Command("sv_staminarecoveryrate", CommandType.cvar, "60", "Rate at which stamina recovers (units/sec)"));
			this.Add(new Command("sv_standable_normal", CommandType.cvar, "0.7", ""));
			this.Add(new Command("sv_stepsize", CommandType.cvar, "18", ""));
			this.Add(new Command("sv_stopspeed", CommandType.cvar, "80", "Minimum stopping speed when on ground."));
			this.Add(new Command("sv_strict_notarget", CommandType.cvar, "0", "If set, notarget will cause entities to never think they are in the pvs"));
			this.Add(new Command("sv_suppress_viewpunch", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_tablet_show_path_to_nearest_resq", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_talk_after_dying_time", CommandType.cvar, "0", "The number of seconds a player can continue talking after dying as if they were still alive"));
			this.Add(new Command("sv_talk_enemy_dead", CommandType.cvar, "0", "Dead players can hear all dead enemy communication (voice, chat)"));
			this.Add(new Command("sv_talk_enemy_living", CommandType.cvar, "0", "Living players can hear all living enemy communication (voice, chat)"));
			this.Add(new Command("sv_teamid_overhead", CommandType.cvar, "1", "Shows teamID over player's heads.  0 = off, 1 = on"));
			this.Add(new Command("sv_teamid_overhead_always_prohibit", CommandType.cvar, "0", "Determines whether cl_teamid_overhead_always is prohibited."));
			this.Add(new Command("sv_teamid_overhead_maxdist", CommandType.cvar, "0", "If >0, server will override cl_teamid_overhead_maxdist"));
			this.Add(new Command("sv_teamid_overhead_maxdist_spec", CommandType.cvar, "0", "If >0, server will override cl_teamid_overhead_maxdist_spec"));
			this.Add(new Command("sv_test_scripted_sequences", CommandType.cvar, "0", "Tests for scripted sequences that are embedded in the world. Run through your map with this set to check for NPCs falling through the world."));
			this.Add(new Command("sv_test_steam_connection_failure", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_teststepsimulation", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_thinktimecheck", CommandType.cvar, "0", "Check for thinktimes all on same timestamp."));
			this.Add(new Command("sv_threaded_init", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_timebetweenducks", CommandType.cvar, "0.4", "Minimum time before recognizing consecutive duck key"));
			this.Add(new Command("sv_turbophysics", CommandType.cvar, "0", "Turns on turbo physics"));
			this.Add(new Command("sv_turning_inaccuracy_angle_min", CommandType.cvar, "4", ""));
			this.Add(new Command("sv_turning_inaccuracy_decay", CommandType.cvar, "0.8", ""));
			this.Add(new Command("sv_turning_inaccuracy_enabled", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_ugc_manager_max_new_file_check_interval_secs", CommandType.cvar, "1000", ""));
			this.Add(new Command("sv_unlag", CommandType.cvar, "1", "Enables player lag compensation"));
			this.Add(new Command("sv_unlag_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_unlag_fixstuck", CommandType.cvar, "0", "Disallow backtracking a player for lag compensation if it will cause them to become stuck"));
			this.Add(new Command("sv_usercmd_custom_random_seed", CommandType.cvar, "1", "When enabled server will populate an additional random seed independent of the client"));
			this.Add(new Command("sv_vehicle_autoaim_scale", CommandType.cvar, "8", ""));
			this.Add(new Command("sv_versus_screen_scene_id", CommandType.cvar, "0", "Determines which scene is used for the versus screen."));
			this.Add(new Command("sv_voice_proximity", CommandType.cvar, "-1", ""));
			this.Add(new Command("sv_voice_proximity_minvolume", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_voice_proximity_positional", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_voice_proximity_use_falloff", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_voicecodec", CommandType.cvar, "vaudio_celt", "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension."));
			this.Add(new Command("sv_vote_allow_in_warmup", CommandType.cvar, "0", "Allow voting during warmup?"));
			this.Add(new Command("sv_vote_allow_spectators", CommandType.cvar, "0", "Allow spectators to initiate votes?"));
			this.Add(new Command("sv_vote_command_delay", CommandType.cvar, "2", "How long after a vote passes until the action happens"));
			this.Add(new Command("sv_vote_count_spectator_votes", CommandType.cvar, "0", "Allow spectators to vote on issues?"));
			this.Add(new Command("sv_vote_creation_timer", CommandType.cvar, "120", "How often someone can individually call a vote."));
			this.Add(new Command("sv_vote_disallow_kick_on_match_point", CommandType.cvar, "0", "Disallow vote kicking on the match point round."));
			this.Add(new Command("sv_vote_failure_timer", CommandType.cvar, "300", "A vote that fails cannot be re-submitted for this long"));
			this.Add(new Command("sv_vote_issue_changelevel_allowed", CommandType.cvar, "1", "Can people hold votes to change levels?"));
			this.Add(new Command("sv_vote_issue_kick_allowed", CommandType.cvar, "1", "Can people hold votes to kick players from the server?"));
			this.Add(new Command("sv_vote_issue_loadbackup_allowed", CommandType.cvar, "1", "Can people hold votes to load match from backup?"));
			this.Add(new Command("sv_vote_issue_loadbackup_spec_authoritative", CommandType.cvar, "0", "When enabled, admins load match from backup without players vote"));
			this.Add(new Command("sv_vote_issue_loadbackup_spec_only", CommandType.cvar, "0", "When enabled, only admins load match from backup"));
			this.Add(new Command("sv_vote_issue_loadbackup_spec_safe", CommandType.cvar, "1", "When enabled, admins load match from backup in safe time of the round only"));
			this.Add(new Command("sv_vote_issue_matchready_allowed", CommandType.cvar, "1", "Can people hold votes to ready/unready the match?"));
			this.Add(new Command("sv_vote_issue_nextlevel_allowextend", CommandType.cvar, "1", "Allow players to extend the current map?"));
			this.Add(new Command("sv_vote_issue_nextlevel_choicesmode", CommandType.cvar, "1", "Present players with a list of lowest playtime maps to choose from?"));
			this.Add(new Command("sv_vote_issue_pause_match_allowed", CommandType.cvar, "1", "Can people hold votes to pause/unpause the match?"));
			this.Add(new Command("sv_vote_issue_pause_match_spec_only", CommandType.cvar, "0", "When enabled, only admins start technical pause"));
			this.Add(new Command("sv_vote_issue_restart_game_allowed", CommandType.cvar, "0", "Can people hold votes to restart the game?"));
			this.Add(new Command("sv_vote_issue_scramble_teams_allowed", CommandType.cvar, "0", "Can people hold votes to scramble the teams?"));
			this.Add(new Command("sv_vote_issue_surrrender_allowed", CommandType.cvar, "1", "Can people hold votes to surrender?"));
			this.Add(new Command("sv_vote_issue_swap_teams_allowed", CommandType.cvar, "0", "Can people hold votes to swap the teams?"));
			this.Add(new Command("sv_vote_issue_timeout_allowed", CommandType.cvar, "1", "Can people hold votes to time out?"));
			this.Add(new Command("sv_vote_kick_ban_duration", CommandType.cvar, "15", "How long should a kick vote ban someone from the server? (in minutes)"));
			this.Add(new Command("sv_vote_quorum_ratio", CommandType.cvar, "0.501", "The minimum ratio of players needed to vote on an issue to resolve it."));
			this.Add(new Command("sv_vote_timer_duration", CommandType.cvar, "15", "How long to allow voting on an issue"));
			this.Add(new Command("sv_vote_to_changelevel_before_match_point", CommandType.cvar, "0", "Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)"));
			this.Add(new Command("sv_walkable_normal", CommandType.cvar, "0.7", ""));
			this.Add(new Command("sv_warmup_to_freezetime_delay", CommandType.cvar, "4", "Delay between end of warmup and start of match."));
			this.Add(new Command("sv_water_movespeed_multiplier", CommandType.cvar, "0.8", ""));
			this.Add(new Command("sv_water_swim_mode", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_wateraccelerate", CommandType.cvar, "10", ""));
			this.Add(new Command("sv_waterdist", CommandType.cvar, "12", "Vertical view fixup when eyes are near water plane."));
			this.Add(new Command("sv_waterfriction", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_weapon_encumbrance_per_item", CommandType.cvar, "0.85", ""));
			this.Add(new Command("sv_weapon_encumbrance_scale", CommandType.cvar, "0", ""));
			this.Add(new Command("sv_weapon_require_use_grace_period", CommandType.cvar, "1", ""));
			this.Add(new Command("sv_workshop_allow_other_maps", CommandType.cvar, "1", "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection."));
			this.Add(new Command("tablet_c4_dist_max", CommandType.cvar, "3000", ""));
			this.Add(new Command("tablet_c4_dist_min", CommandType.cvar, "400", ""));
			this.Add(new Command("template_debug", CommandType.cvar, "0", ""));
			this.Add(new Command("test_dispatcheffect", CommandType.cmd, "", "Test a clientside dispatch effect.<br>	Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale><br>	Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0><br>"));
			this.Add(new Command("test_entity_blocker", CommandType.cmd, "", "Test command that drops an entity blocker out in front of the player."));
			this.Add(new Command("test_outtro_stats", CommandType.cmd, "", ""));
			this.Add(new Command("think_limit", CommandType.cvar, "10", "Maximum think time in milliseconds, warning is printed if this is exceeded."));
			this.Add(new Command("thirdperson_lockcamera", CommandType.cvar, "0", ""));
			this.Add(new Command("throttle_expensive_ai", CommandType.cvar, "0", ""));
			this.Add(new Command("timeleft", CommandType.cmd, "", "prints the time remaining in the match"));
			this.Add(new Command("timeout_ct_start", CommandType.cmd, "", ""));
			this.Add(new Command("timeout_terrorist_start", CommandType.cmd, "", ""));
			this.Add(new Command("tr_best_course_time", CommandType.cvar, "0", "The player's best time for the timed obstacle course"));
			this.Add(new Command("tr_completed_training", CommandType.cvar, "0", "Whether the local player has completed the initial training portion of the training map"));
			this.Add(new Command("tr_valve_course_time", CommandType.cvar, "352", "Valve's best time for the timed obstacle course"));
			this.Add(new Command("trace_report", CommandType.cvar, "0", ""));
			this.Add(new Command("traceattack", CommandType.cmd, "", "traceattack damage hitgroup"));
			this.Add(new Command("tv_allow_autorecording_index", CommandType.cvar, "-1", "When >=0 restricts autorecording only to the specified TV index"));
			this.Add(new Command("tv_allow_static_shots", CommandType.cvar, "1", "Auto director uses fixed level cameras for shots"));
			this.Add(new Command("tv_delay", CommandType.cvar, "10", "GOTV broadcast delay in seconds"));
			this.Add(new Command("tv_delay1", CommandType.cvar, "15", "GOTV[instance 1] broadcast delay in seconds"));
			this.Add(new Command("tv_delaymapchange", CommandType.cvar, "1", "Delays map change until broadcast is complete"));
			this.Add(new Command("tv_relayradio", CommandType.cvar, "0", "Relay team radio commands to TV: 0=off, 1=on"));
			this.Add(new Command("tv_relaytextchat", CommandType.cvar, "1", "Relay text chat data: 0=off, 1=say, 2=say+say_team"));
			this.Add(new Command("tv_snapshotrate", CommandType.cvar, "32", "Snapshots broadcasted per second"));
			this.Add(new Command("tv_time_remaining", CommandType.cmd, "", "Print remaining tv broadcast time"));
			this.Add(new Command("tv_transmitall", CommandType.cvar, "1", "Transmit all entities (not only director view)"));
			this.Add(new Command("tweak_ammo_impulses", CommandType.cmd, "", "Allow real-time tweaking of the ammo impulse values."));
			this.Add(new Command("use", CommandType.cmd, "", "Use a particular weapon	<br>Arguments: <weapon_name>"));
			this.Add(new Command("vehicle_flushscript", CommandType.cmd, "", "Flush and reload all vehicle scripts"));
			this.Add(new Command("view_punch_decay", CommandType.cvar, "18", "Decay factor exponent for view punch"));
			this.Add(new Command("view_recoil_tracking", CommandType.cvar, "0.45", "How closely the view tracks with the aim punch from weapon recoil"));
			this.Add(new Command("vis_force", CommandType.cvar, "0", ""));
			this.Add(new Command("vismon_poll_frequency", CommandType.cvar, ".5", ""));
			this.Add(new Command("vismon_trace_limit", CommandType.cvar, "12", ""));
			this.Add(new Command("voice_player_speaking_delay_threshold", CommandType.cvar, "0.5f", ""));
			this.Add(new Command("voice_serverdebug", CommandType.cvar, "0", ""));
			this.Add(new Command("voxeltree_box", CommandType.cmd, "", "View entities in the voxel-tree inside box <Vector(min), Vector(max)>."));
			this.Add(new Command("voxeltree_playerview", CommandType.cmd, "", "View entities in the voxel-tree at the player position."));
			this.Add(new Command("voxeltree_sphere", CommandType.cmd, "", "View entities in the voxel-tree inside sphere <Vector(center), float(radius)>."));
			this.Add(new Command("voxeltree_view", CommandType.cmd, "", "View entities in the voxel-tree."));
			this.Add(new Command("vprof_scope_entity_gamephys", CommandType.cvar, "0", ""));
			this.Add(new Command("vprof_scope_entity_thinks", CommandType.cvar, "0", ""));
			this.Add(new Command("vprof_think_limit", CommandType.cvar, "0", ""));
			this.Add(new Command("wc_air_edit_further", CommandType.cmd, "", "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location further away from player"));
			this.Add(new Command("wc_air_edit_nearer", CommandType.cmd, "", "When in WC edit mode and editing air nodes,  moves position of air node crosshair and placement location nearer to from player"));
			this.Add(new Command("wc_air_node_edit", CommandType.cmd, "", "When in WC edit mode, toggles laying down or air nodes instead of ground nodes"));
			this.Add(new Command("wc_create", CommandType.cmd, "", "When in WC edit mode, creates a node where the player is looking if a node is allowed at that location for the currently selected hull size (see ai_next_hull)"));
			this.Add(new Command("wc_destroy", CommandType.cmd, "", "When in WC edit mode, destroys the node that the player is nearest to looking at.  (The node will be highlighted by a red box)."));
			this.Add(new Command("wc_destroy_undo", CommandType.cmd, "", "When in WC edit mode restores the last deleted node"));
			this.Add(new Command("wc_link_edit", CommandType.cmd, "", ""));
			this.Add(new Command("weapon_accuracy_forcespread", CommandType.cvar, "0", "Force spread to the specified value."));
			this.Add(new Command("weapon_accuracy_logging", CommandType.cvar, "0", ""));
			this.Add(new Command("weapon_accuracy_nospread", CommandType.cvar, "0", "Disable weapon inaccuracy spread"));
			this.Add(new Command("weapon_accuracy_shotgun_spread_patterns", CommandType.cvar, "1", ""));
			this.Add(new Command("weapon_air_spread_scale", CommandType.cvar, "1.0", "Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing"));
			this.Add(new Command("weapon_debug_inaccuracy_only_up", CommandType.cvar, "0", "Force weapon inaccuracy to be in exactly the up direction"));
			this.Add(new Command("weapon_debug_max_inaccuracy", CommandType.cvar, "0", "Force all shots to have maximum inaccuracy"));
			this.Add(new Command("weapon_land_dip_amt", CommandType.cvar, "20.0", "The amount the gun should dip when the player lands after a jump."));
			this.Add(new Command("weapon_molotov_maxdetonateslope", CommandType.cvar, "30.0", "Maximum angle of slope on which the molotov will detonate"));
			this.Add(new Command("weapon_near_empty_sound", CommandType.cvar, "1", ""));
			this.Add(new Command("weapon_recoil_cooldown", CommandType.cvar, "0.55", "DEPRECATED. Recoil now decays using weapon_recoil_decay_coefficient"));
			this.Add(new Command("weapon_recoil_decay1_exp", CommandType.cvar, "3.5", "Decay factor exponent for weapon recoil"));
			this.Add(new Command("weapon_recoil_decay2_exp", CommandType.cvar, "8", "Decay factor exponent for weapon recoil"));
			this.Add(new Command("weapon_recoil_decay2_lin", CommandType.cvar, "18", "Decay factor (linear term) for weapon recoil"));
			this.Add(new Command("weapon_recoil_decay_coefficient", CommandType.cvar, "2.0", ""));
			this.Add(new Command("weapon_recoil_scale", CommandType.cvar, "2.0", "Overall scale factor for recoil. Used to reduce recoil on specific platforms"));
			this.Add(new Command("weapon_recoil_scale_motion_controller", CommandType.cvar, "1.0", "Overall scale factor for recoil. Used to reduce recoil.  Only for motion controllers"));
			this.Add(new Command("weapon_recoil_suppression_factor", CommandType.cvar, "0.75", "Initial recoil suppression factor (first suppressed shot will use this factor * standard recoil, lerping to 1 for later shots"));
			this.Add(new Command("weapon_recoil_suppression_shots", CommandType.cvar, "4", "Number of shots before weapon uses full recoil"));
			this.Add(new Command("weapon_recoil_variance", CommandType.cvar, "0.55", "Amount of variance per recoil impulse"));
			this.Add(new Command("weapon_recoil_vel_decay", CommandType.cvar, "4.5", "Decay factor for weapon recoil velocity"));
			this.Add(new Command("weapon_recoil_view_punch_extra", CommandType.cvar, "0.055", "Additional (non-aim) punch added to view from recoil"));
			this.Add(new Command("weapon_reticle_knife_show", CommandType.cvar, "1", "When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife."));
			this.Add(new Command("weapon_showproficiency", CommandType.cvar, "0", ""));
			this.Add(new Command("weapon_sound_falloff_multiplier", CommandType.cvar, "1.0", "Scaling for falloff of weapon firing sounds"));
			this.Add(new Command("wipe_nav_attributes", CommandType.cmd, "", "Clear all nav attributes of selected area."));
			this.Add(new Command("workshop_start_map", CommandType.cmd, "", "Sets the first map to load once a workshop collection been hosted. Takes the file id of desired start map as a parameter."));
			this.Add(new Command("xbox_autothrottle", CommandType.cvar, "1", ""));
			this.Add(new Command("xbox_steering_deadzone", CommandType.cvar, "0.0", ""));
			this.Add(new Command("xbox_throttlebias", CommandType.cvar, "100", ""));
			this.Add(new Command("xbox_throttlespoof", CommandType.cvar, "200", ""));
			this.Add(new Command("xc_crouch_debounce", CommandType.cvar, "0", ""));
		}
	}
}
